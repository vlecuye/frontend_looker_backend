{"version":3,"file":"authToken.js","names":["AuthToken","constructor","token","_defineProperty","Date","setToken","isActive","access_token","expiresAt","now","token_type","expires_in","refresh_token","exp","setSeconds","getSeconds","lagTime","reset","exports"],"sources":["../src/authToken.ts"],"sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2021 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport type { IAccessToken } from './authSession'\n\nexport class AuthToken implements IAccessToken {\n  /** set the server response lag time to 10 seconds */\n  lagTime = 10\n  access_token = ''\n  token_type = ''\n  refresh_token?: string\n  expires_in = 0\n  expiresAt = new Date()\n\n  constructor(token?: IAccessToken) {\n    if (!token) token = {} as IAccessToken\n    this.setToken(token)\n  }\n\n  // true if the authentication token is set and has not timed out\n  isActive() {\n    if (!this.access_token) return false\n    if (!this.expiresAt) return false\n    const now = new Date()\n    return this.expiresAt > now\n  }\n\n  // Assign the token and set its expiration\n  setToken(token: IAccessToken) {\n    this.access_token = token.access_token || ''\n    this.token_type = token.token_type || ''\n    this.expires_in = token.expires_in || 0\n    // nil refresh_token in new token means keep using the old refresh_token\n    // capture non-nil new refresh_token\n    if (token.refresh_token) {\n      this.refresh_token = token.refresh_token\n    }\n    const exp = new Date()\n    if (this.access_token && this.expires_in) {\n      exp.setSeconds(exp.getSeconds() + this.expires_in - this.lagTime)\n    } else {\n      exp.setSeconds(exp.getSeconds() - this.lagTime) // set to expire 'lagTime' ago\n    }\n    this.expiresAt = exp\n    return this\n  }\n\n  reset() {\n    this.access_token = ''\n    this.expires_in = 0\n  }\n}\n"],"mappings":";;;;;;;;;AA4BO,MAAMA,SAAS,CAAyB;EAS7CC,WAAWA,CAACC,KAAoB,EAAE;IAAAC,eAAA,kBAPxB,EAAE;IAAAA,eAAA,uBACG,EAAE;IAAAA,eAAA,qBACJ,EAAE;IAAAA,eAAA;IAAAA,eAAA,qBAEF,CAAC;IAAAA,eAAA,oBACF,IAAIC,IAAI,EAAE;IAGpB,IAAI,CAACF,KAAK,EAAEA,KAAK,GAAG,CAAC,CAAiB;IACtC,IAAI,CAACG,QAAQ,CAACH,KAAK,CAAC;EACtB;EAGAI,QAAQA,CAAA,EAAG;IACT,IAAI,CAAC,IAAI,CAACC,YAAY,EAAE,OAAO,KAAK;IACpC,IAAI,CAAC,IAAI,CAACC,SAAS,EAAE,OAAO,KAAK;IACjC,IAAMC,GAAG,GAAG,IAAIL,IAAI,EAAE;IACtB,OAAO,IAAI,CAACI,SAAS,GAAGC,GAAG;EAC7B;EAGAJ,QAAQA,CAACH,KAAmB,EAAE;IAC5B,IAAI,CAACK,YAAY,GAAGL,KAAK,CAACK,YAAY,IAAI,EAAE;IAC5C,IAAI,CAACG,UAAU,GAAGR,KAAK,CAACQ,UAAU,IAAI,EAAE;IACxC,IAAI,CAACC,UAAU,GAAGT,KAAK,CAACS,UAAU,IAAI,CAAC;IAGvC,IAAIT,KAAK,CAACU,aAAa,EAAE;MACvB,IAAI,CAACA,aAAa,GAAGV,KAAK,CAACU,aAAa;IAC1C;IACA,IAAMC,GAAG,GAAG,IAAIT,IAAI,EAAE;IACtB,IAAI,IAAI,CAACG,YAAY,IAAI,IAAI,CAACI,UAAU,EAAE;MACxCE,GAAG,CAACC,UAAU,CAACD,GAAG,CAACE,UAAU,EAAE,GAAG,IAAI,CAACJ,UAAU,GAAG,IAAI,CAACK,OAAO,CAAC;IACnE,CAAC,MAAM;MACLH,GAAG,CAACC,UAAU,CAACD,GAAG,CAACE,UAAU,EAAE,GAAG,IAAI,CAACC,OAAO,CAAC;IACjD;IACA,IAAI,CAACR,SAAS,GAAGK,GAAG;IACpB,OAAO,IAAI;EACb;EAEAI,KAAKA,CAAA,EAAG;IACN,IAAI,CAACV,YAAY,GAAG,EAAE;IACtB,IAAI,CAACI,UAAU,GAAG,CAAC;EACrB;AACF;AAACO,OAAA,CAAAlB,SAAA,GAAAA,SAAA"}