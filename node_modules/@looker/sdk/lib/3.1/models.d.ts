import type { IDictionary, Url, DelimArray } from '@looker/sdk-rtl';
export interface IAccessToken {
    access_token?: string;
    token_type?: string;
    expires_in?: number;
}
export declare enum Align {
    left = "left",
    right = "right"
}
export interface IApiSession {
    can?: IDictionary<boolean>;
    workspace_id?: string | null;
    sudo_user_id?: number | null;
}
export interface IApiVersion {
    looker_release_version?: string | null;
    current_version?: IApiVersionElement;
    supported_versions?: IApiVersionElement[] | null;
    api_server_url?: string;
    web_server_url?: string;
}
export interface IApiVersionElement {
    version?: string | null;
    full_version?: string | null;
    status?: string | null;
    swagger_url?: Url | null;
}
export interface IBackupConfiguration {
    can?: IDictionary<boolean>;
    type?: string | null;
    custom_s3_bucket?: string | null;
    custom_s3_bucket_region?: string | null;
    custom_s3_key?: string | null;
    custom_s3_secret?: string | null;
    url?: Url | null;
}
export declare enum Category {
    parameter = "parameter",
    filter = "filter",
    measure = "measure",
    dimension = "dimension"
}
export interface IColorCollection {
    id?: string;
    label?: string;
    categoricalPalettes?: IDiscretePalette[];
    sequentialPalettes?: IContinuousPalette[];
    divergingPalettes?: IContinuousPalette[];
}
export interface IColorStop {
    color?: string;
    offset?: number;
}
export interface IContentFavorite {
    id?: number;
    user_id?: number;
    content_metadata_id?: number;
    look_id?: number | null;
    dashboard_id?: number | null;
    look?: ILookBasic;
    dashboard?: IDashboardBase;
}
export interface IContentMeta {
    can?: IDictionary<boolean>;
    id?: number;
    name?: string | null;
    parent_id?: number | null;
    dashboard_id?: string | null;
    look_id?: number | null;
    folder_id?: string | null;
    content_type?: string | null;
    inherits?: boolean;
    inheriting_id?: number | null;
    slug?: string | null;
    space_id?: string | null;
}
export interface IContentMetaGroupUser {
    can?: IDictionary<boolean>;
    id?: string;
    content_metadata_id?: string | null;
    permission_type?: PermissionType | null;
    group_id?: number | null;
    user_id?: number | null;
}
export interface IContentValidation {
    content_with_errors?: IContentValidatorError[] | null;
    computation_time?: number | null;
    total_looks_validated?: number | null;
    total_dashboard_elements_validated?: number | null;
    total_dashboard_filters_validated?: number | null;
    total_scheduled_plans_validated?: number | null;
    total_alerts_validated?: number | null;
    total_explores_validated?: number | null;
}
export interface IContentValidationAlert {
    id?: number;
    lookml_dashboard_id?: string | null;
    lookml_link_id?: string | null;
    custom_url_base?: string | null;
    custom_url_params?: string | null;
    custom_url_label?: string | null;
    show_custom_url?: boolean;
    custom_title?: string | null;
}
export interface IContentValidationDashboard {
    description?: string | null;
    id?: string;
    folder?: IContentValidationFolder;
    title?: string | null;
    space?: IContentValidationSpace;
}
export interface IContentValidationDashboardElement {
    body_text?: string | null;
    dashboard_id?: string | null;
    id?: string;
    look_id?: string | null;
    note_display?: string | null;
    note_state?: string | null;
    note_text?: string | null;
    note_text_as_html?: string | null;
    query_id?: number | null;
    subtitle_text?: string | null;
    title?: string | null;
    title_hidden?: boolean;
    title_text?: string | null;
    type?: string | null;
    rich_content_json?: string | null;
}
export interface IContentValidationDashboardFilter {
    id?: string;
    dashboard_id?: string | null;
    name?: string | null;
    title?: string | null;
    type?: string | null;
    default_value?: string | null;
    model?: string | null;
    explore?: string | null;
    dimension?: string | null;
}
export interface IContentValidationError {
    message?: string | null;
    field_name?: string | null;
    model_name?: string | null;
    explore_name?: string | null;
    removable?: boolean;
}
export interface IContentValidationFolder {
    name: string;
    id?: string;
}
export interface IContentValidationLook {
    id?: number;
    title?: string | null;
    short_url?: string | null;
    folder?: IContentValidationFolder;
    space?: IContentValidationSpace;
}
export interface IContentValidationLookMLDashboard {
    id?: string;
    title?: string | null;
    space_id?: string | null;
    space?: ISpaceBase;
}
export interface IContentValidationLookMLDashboardElement {
    lookml_link_id?: string | null;
    title?: string | null;
}
export interface IContentValidationScheduledPlan {
    name?: string | null;
    look_id?: number | null;
    id?: number;
}
export interface IContentValidationSpace {
    name: string;
    id?: string;
}
export interface IContentValidatorError {
    look?: IContentValidationLook;
    dashboard?: IContentValidationDashboard;
    dashboard_element?: IContentValidationDashboardElement;
    dashboard_filter?: IContentValidationDashboardFilter;
    scheduled_plan?: IContentValidationScheduledPlan;
    alert?: IContentValidationAlert;
    lookml_dashboard?: IContentValidationLookMLDashboard;
    lookml_dashboard_element?: IContentValidationLookMLDashboardElement;
    errors?: IContentValidationError[] | null;
    id?: string;
}
export interface IContentView {
    can?: IDictionary<boolean>;
    id?: number;
    look_id?: number | null;
    dashboard_id?: number | null;
    title?: string | null;
    content_metadata_id?: number | null;
    user_id?: number | null;
    group_id?: number | null;
    view_count?: number | null;
    favorite_count?: number | null;
    last_viewed_at?: string | null;
    start_of_week_date?: string | null;
}
export interface IContinuousPalette {
    id?: string;
    label?: string | null;
    type?: string;
    stops?: IColorStop[];
}
export interface ICreateDashboardFilter {
    id?: string;
    dashboard_id: string | null;
    name: string | null;
    title: string | null;
    type: string | null;
    default_value?: string | null;
    model?: string | null;
    explore?: string | null;
    dimension?: string | null;
    field?: IDictionary<any> | null;
    row?: number | null;
    listens_to_filters?: string[] | null;
    allow_multiple_values?: boolean;
    required?: boolean;
    ui_config?: IDictionary<any> | null;
}
export interface ICreateDashboardRenderTask {
    dashboard_filters?: string | null;
    dashboard_style?: string | null;
}
export interface ICreateFolder {
    name: string;
    parent_id: string;
}
export interface ICreateQueryTask {
    can?: IDictionary<boolean>;
    query_id: number | null;
    result_format: ResultFormat | null;
    source?: string | null;
    deferred?: boolean;
    look_id?: number | null;
    dashboard_id?: string | null;
}
export interface ICreateSpace {
    name: string;
    parent_id: string;
}
export interface ICredentialsApi3 {
    can?: IDictionary<boolean>;
    id?: number;
    client_id?: string | null;
    created_at?: string | null;
    is_disabled?: boolean;
    type?: string | null;
    url?: Url | null;
}
export interface ICredentialsEmail {
    can?: IDictionary<boolean>;
    created_at?: string | null;
    email?: string | null;
    forced_password_reset_at_next_login?: boolean;
    user_id?: string | null;
    is_disabled?: boolean;
    logged_in_at?: string | null;
    password_reset_url?: string | null;
    account_setup_url?: string | null;
    type?: string | null;
    url?: Url | null;
    user_url?: Url | null;
}
export interface ICredentialsEmbed {
    can?: IDictionary<boolean>;
    created_at?: string | null;
    external_group_id?: string | null;
    external_user_id?: string | null;
    id?: number;
    is_disabled?: boolean;
    logged_in_at?: string | null;
    type?: string | null;
    url?: Url | null;
}
export interface ICredentialsGoogle {
    can?: IDictionary<boolean>;
    created_at?: string | null;
    domain?: string | null;
    email?: string | null;
    google_user_id?: string | null;
    is_disabled?: boolean;
    logged_in_at?: string | null;
    type?: string | null;
    url?: Url | null;
}
export interface ICredentialsLDAP {
    can?: IDictionary<boolean>;
    created_at?: string | null;
    email?: string | null;
    is_disabled?: boolean;
    ldap_dn?: string | null;
    ldap_id?: string | null;
    logged_in_at?: string | null;
    type?: string | null;
    url?: Url | null;
}
export interface ICredentialsLookerOpenid {
    can?: IDictionary<boolean>;
    created_at?: string | null;
    email?: string | null;
    is_disabled?: boolean;
    logged_in_at?: string | null;
    logged_in_ip?: string | null;
    type?: string | null;
    url?: Url | null;
    user_url?: Url | null;
}
export interface ICredentialsOIDC {
    can?: IDictionary<boolean>;
    created_at?: string | null;
    email?: string | null;
    is_disabled?: boolean;
    logged_in_at?: string | null;
    oidc_user_id?: string | null;
    type?: string | null;
    url?: Url | null;
}
export interface ICredentialsSaml {
    can?: IDictionary<boolean>;
    created_at?: string | null;
    email?: string | null;
    is_disabled?: boolean;
    logged_in_at?: string | null;
    saml_user_id?: string | null;
    type?: string | null;
    url?: Url | null;
}
export interface ICredentialsTotp {
    can?: IDictionary<boolean>;
    created_at?: string | null;
    is_disabled?: boolean;
    type?: string | null;
    verified?: boolean;
    url?: Url | null;
}
export interface ICustomWelcomeEmail {
    can?: IDictionary<boolean>;
    enabled?: boolean;
    content?: string | null;
    subject?: string | null;
    header?: string | null;
}
export interface IDashboard {
    can?: IDictionary<boolean>;
    content_favorite_id?: number | null;
    content_metadata_id?: number | null;
    description?: string | null;
    hidden?: boolean;
    id?: string;
    model?: ILookModel;
    query_timezone?: string;
    readonly?: boolean;
    refresh_interval?: string | null;
    refresh_interval_to_i?: number | null;
    folder?: IFolderBase;
    title?: string | null;
    user_id?: number | null;
    slug?: string | null;
    preferred_viewer?: string | null;
    space?: ISpaceBase;
    alert_sync_with_dashboard_filter_enabled?: boolean;
    background_color?: string;
    created_at?: Date | null;
    crossfilter_enabled?: boolean;
    dashboard_elements?: IDashboardElement[] | null;
    dashboard_filters?: IDashboardFilter[] | null;
    dashboard_layouts?: IDashboardLayout[] | null;
    deleted?: boolean;
    deleted_at?: Date | null;
    deleter_id?: number | null;
    edit_uri?: Url | null;
    enable_viz_full_screen?: boolean;
    favorite_count?: number | null;
    filters_bar_collapsed?: boolean;
    filters_location_top?: boolean;
    last_accessed_at?: Date | null;
    last_viewed_at?: Date | null;
    updated_at?: Date | null;
    last_updater_id?: number | null;
    last_updater_name?: string | null;
    user_name?: string | null;
    load_configuration?: string | null;
    lookml_link_id?: string | null;
    show_filters_bar?: boolean;
    show_title?: boolean;
    space_id?: string | null;
    folder_id?: string | null;
    text_tile_text_color?: string;
    tile_background_color?: string;
    tile_text_color?: string;
    title_color?: string;
    view_count?: number | null;
    appearance?: IDashboardAppearance;
}
export interface IDashboardAggregateTableLookml {
    dashboard_id?: string | null;
    aggregate_table_lookml?: string | null;
}
export interface IDashboardAppearance {
    page_side_margins?: number | null;
    page_background_color?: string | null;
    tile_title_alignment?: string | null;
    tile_space_between?: number | null;
    tile_background_color?: string | null;
    tile_shadow?: boolean | null;
    key_color?: string | null;
}
export interface IDashboardBase {
    can?: IDictionary<boolean>;
    content_favorite_id?: number | null;
    content_metadata_id?: number | null;
    description?: string | null;
    hidden?: boolean;
    id?: string;
    model?: ILookModel;
    query_timezone?: string;
    readonly?: boolean;
    refresh_interval?: string | null;
    refresh_interval_to_i?: number | null;
    folder?: IFolderBase;
    title?: string | null;
    user_id?: number | null;
    slug?: string | null;
    preferred_viewer?: string | null;
    space?: ISpaceBase;
}
export interface IDashboardElement {
    can?: IDictionary<boolean>;
    body_text?: string | null;
    body_text_as_html?: string | null;
    dashboard_id?: string | null;
    edit_uri?: Url | null;
    id?: string;
    look?: ILookWithQuery;
    look_id?: string | null;
    lookml_link_id?: string | null;
    merge_result_id?: string | null;
    note_display?: string | null;
    note_state?: string | null;
    note_text?: string | null;
    note_text_as_html?: string | null;
    query?: IQuery;
    query_id?: number | null;
    refresh_interval?: string | null;
    refresh_interval_to_i?: number | null;
    result_maker?: IResultMakerWithIdVisConfigAndDynamicFields;
    result_maker_id?: number | null;
    subtitle_text?: string | null;
    title?: string | null;
    title_hidden?: boolean;
    title_text?: string | null;
    type?: string | null;
    alert_count?: number | null;
    rich_content_json?: string | null;
    title_text_as_html?: string | null;
    subtitle_text_as_html?: string | null;
}
export interface IDashboardFilter {
    can?: IDictionary<boolean>;
    id?: string;
    dashboard_id?: string | null;
    name?: string | null;
    title?: string | null;
    type?: string | null;
    default_value?: string | null;
    model?: string | null;
    explore?: string | null;
    dimension?: string | null;
    field?: IDictionary<any> | null;
    row?: number | null;
    listens_to_filters?: string[] | null;
    allow_multiple_values?: boolean;
    required?: boolean;
    ui_config?: IDictionary<any> | null;
}
export interface IDashboardLayout {
    can?: IDictionary<boolean>;
    id?: string;
    dashboard_id?: string | null;
    type?: string | null;
    active?: boolean;
    column_width?: number | null;
    width?: number | null;
    deleted?: boolean;
    dashboard_title?: string | null;
    dashboard_layout_components?: IDashboardLayoutComponent[] | null;
}
export interface IDashboardLayoutComponent {
    can?: IDictionary<boolean>;
    id?: string;
    dashboard_layout_id?: string | null;
    dashboard_element_id?: string | null;
    row?: number | null;
    column?: number | null;
    width?: number | null;
    height?: number | null;
    deleted?: boolean;
    element_title?: string | null;
    element_title_hidden?: boolean;
    vis_type?: string | null;
}
export interface IDashboardLookml {
    dashboard_id?: string | null;
    folder_id?: string | null;
    lookml?: string | null;
}
export interface IDataActionForm {
    state?: IDataActionUserState;
    fields?: IDataActionFormField[] | null;
}
export interface IDataActionFormField {
    name?: string | null;
    label?: string | null;
    description?: string | null;
    type?: string | null;
    default?: string | null;
    oauth_url?: string | null;
    interactive?: boolean;
    required?: boolean;
    options?: IDataActionFormSelectOption[] | null;
}
export interface IDataActionFormSelectOption {
    name?: string | null;
    label?: string | null;
}
export interface IDataActionRequest {
    action?: IDictionary<any> | null;
    form_values?: IDictionary<string> | null;
}
export interface IDataActionResponse {
    webhook_id?: string | null;
    success?: boolean;
    refresh_query?: boolean;
    validation_errors?: IValidationError;
    message?: string | null;
}
export interface IDataActionUserState {
    data?: string | null;
    refresh_time?: number | null;
}
export interface IDatagroup {
    can?: IDictionary<boolean>;
    created_at?: number | null;
    id?: number;
    model_name?: string | null;
    name?: string | null;
    stale_before?: number | null;
    trigger_check_at?: number | null;
    trigger_error?: string | null;
    trigger_value?: string | null;
    triggered_at?: number | null;
}
export interface IDBConnection {
    can?: IDictionary<boolean>;
    name?: string;
    dialect?: IDialect;
    snippets?: ISnippet[];
    pdts_enabled?: boolean;
    host?: string | null;
    port?: string | null;
    username?: string | null;
    password?: string | null;
    uses_oauth?: boolean;
    certificate?: string | null;
    file_type?: string | null;
    database?: string | null;
    db_timezone?: string | null;
    query_timezone?: string | null;
    schema?: string | null;
    max_connections?: number | null;
    max_billing_gigabytes?: string | null;
    ssl?: boolean;
    verify_ssl?: boolean;
    tmp_db_name?: string | null;
    jdbc_additional_params?: string | null;
    pool_timeout?: number | null;
    dialect_name?: string | null;
    supports_data_studio_link?: boolean;
    created_at?: string | null;
    user_id?: string | null;
    example?: boolean;
    user_db_credentials?: boolean | null;
    user_attribute_fields?: string[] | null;
    maintenance_cron?: string | null;
    last_regen_at?: string | null;
    last_reap_at?: string | null;
    sql_runner_precache_tables?: boolean;
    sql_writing_with_info_schema?: boolean;
    after_connect_statements?: string | null;
    pdt_context_override?: IDBConnectionOverride;
    managed?: boolean;
    uses_tns?: boolean | null;
}
export interface IDBConnectionBase {
    can?: IDictionary<boolean>;
    name?: string;
    dialect?: IDialect;
    snippets?: ISnippet[];
    pdts_enabled?: boolean;
}
export interface IDBConnectionOverride {
    context?: string;
    host?: string | null;
    port?: string | null;
    username?: string | null;
    password?: string | null;
    has_password?: boolean;
    certificate?: string | null;
    file_type?: string | null;
    database?: string | null;
    schema?: string | null;
    jdbc_additional_params?: string | null;
    after_connect_statements?: string | null;
}
export interface IDBConnectionTestResult {
    can?: IDictionary<boolean>;
    connection_string?: string | null;
    message?: string | null;
    name?: string | null;
    status?: string | null;
}
export interface IDelegateOauthTest {
    name?: string;
    installation_target_id?: string;
    installation_id?: number;
    success?: boolean;
}
export interface IDependencyGraph {
    graph_text?: string;
}
export declare enum DependencyStatus {
    lock_optional = "lock_optional",
    lock_required = "lock_required",
    lock_error = "lock_error",
    install_none = "install_none"
}
export interface IDialect {
    name?: string;
    label?: string;
    supports_cost_estimate?: boolean;
    cost_estimate_style?: string | null;
    persistent_table_indexes?: string;
    persistent_table_sortkeys?: string;
    persistent_table_distkey?: string;
    supports_streaming?: boolean;
    automatically_run_sql_runner_snippets?: boolean;
    connection_tests?: string[];
    supports_inducer?: boolean;
    supports_multiple_databases?: boolean;
    supports_persistent_derived_tables?: boolean;
    has_ssl_support?: boolean;
}
export interface IDialectInfo {
    can?: IDictionary<boolean>;
    default_max_connections?: string | null;
    default_port?: string | null;
    installed?: boolean;
    label?: string | null;
    label_for_database_equivalent?: string | null;
    name?: string | null;
    supported_options?: IDialectInfoOptions;
}
export interface IDialectInfoOptions {
    additional_params?: boolean;
    after_connect_statements?: boolean;
    analytical_view_dataset?: boolean;
    auth?: boolean;
    cost_estimate?: boolean;
    disable_context_comment?: boolean;
    host?: boolean;
    instance_name?: boolean;
    max_billing_gigabytes?: boolean;
    oauth_credentials?: boolean;
    pdts_for_oauth?: boolean;
    port?: boolean;
    project_name?: boolean;
    schema?: boolean;
    service_account_credentials?: boolean;
    ssl?: boolean;
    timezone?: boolean;
    tmp_table?: boolean;
    tns?: boolean;
    username?: boolean;
    username_required?: boolean;
    can?: IDictionary<boolean>;
}
export interface IDigestEmails {
    is_enabled?: boolean;
}
export interface IDigestEmailSend {
    configuration_delivered?: boolean;
}
export interface IDiscretePalette {
    id?: string;
    label?: string | null;
    type?: string;
    colors?: string[];
}
export interface IEmbedSsoParams {
    target_url: Url;
    session_length?: number | null;
    force_logout_login?: boolean;
    external_user_id?: string | null;
    first_name?: string | null;
    last_name?: string | null;
    user_timezone?: string | null;
    permissions?: string[] | null;
    models?: string[] | null;
    group_ids?: number[] | null;
    external_group_id?: string | null;
    user_attributes?: IDictionary<any> | null;
    secret_id?: number | null;
    embed_domain?: string | null;
}
export interface IEmbedUrlResponse {
    url?: string;
}
export interface IError {
    message: string | null;
    documentation_url: Url | null;
}
export declare enum FillStyle {
    enumeration = "enumeration",
    range = "range"
}
export interface IFolder {
    name: string;
    parent_id?: string | null;
    id?: string;
    content_metadata_id?: number | null;
    created_at?: Date | null;
    creator_id?: number | null;
    child_count?: number | null;
    external_id?: string | null;
    is_embed?: boolean;
    is_embed_shared_root?: boolean;
    is_embed_users_root?: boolean;
    is_personal?: boolean;
    is_personal_descendant?: boolean;
    is_shared_root?: boolean;
    is_users_root?: boolean;
    can?: IDictionary<boolean>;
    dashboards?: IDashboardBase[] | null;
    looks?: ILookWithDashboards[] | null;
}
export interface IFolderBase {
    name: string;
    parent_id?: string | null;
    id?: string;
    content_metadata_id?: number | null;
    created_at?: Date | null;
    creator_id?: number | null;
    child_count?: number | null;
    external_id?: string | null;
    is_embed?: boolean;
    is_embed_shared_root?: boolean;
    is_embed_users_root?: boolean;
    is_personal?: boolean;
    is_personal_descendant?: boolean;
    is_shared_root?: boolean;
    is_users_root?: boolean;
    can?: IDictionary<boolean>;
}
export declare enum Format {
    topojson = "topojson",
    vector_tile_region = "vector_tile_region"
}
export interface IGitBranch {
    can?: IDictionary<boolean>;
    name?: string | null;
    remote?: string | null;
    remote_name?: string | null;
    error?: string | null;
    message?: string | null;
    owner_name?: string | null;
    readonly?: boolean;
    personal?: boolean;
    is_local?: boolean;
    is_remote?: boolean;
    is_production?: boolean;
    ahead_count?: number | null;
    behind_count?: number | null;
    commit_at?: number;
    ref?: string | null;
    remote_ref?: string | null;
}
export interface IGitConnectionTest {
    can?: IDictionary<boolean>;
    description?: string | null;
    id?: string;
}
export interface IGitConnectionTestResult {
    can?: IDictionary<boolean>;
    id?: string;
    message?: string | null;
    status?: string | null;
}
export interface IGitStatus {
    action?: string | null;
    conflict?: boolean;
    revertable?: boolean;
    text?: string | null;
    can?: IDictionary<boolean>;
}
export interface IGroup {
    can?: IDictionary<boolean>;
    can_add_to_content_metadata?: boolean;
    contains_current_user?: boolean;
    external_group_id?: string | null;
    externally_managed?: boolean;
    id?: number;
    include_by_default?: boolean;
    name?: string | null;
    user_count?: number | null;
}
export interface IGroupIdForGroupInclusion {
    group_id?: number | null;
}
export interface IGroupIdForGroupUserInclusion {
    user_id?: number | null;
}
export interface IHomepage {
    can?: IDictionary<boolean>;
    content_metadata_id?: number | null;
    created_at?: Date | null;
    deleted_at?: Date | null;
    description?: string | null;
    homepage_sections?: IHomepageSection[] | null;
    id?: number;
    section_order?: number[] | null;
    title?: string | null;
    updated_at?: Date | null;
    user_id?: number | null;
    primary_homepage?: boolean;
}
export interface IHomepageItem {
    can?: IDictionary<boolean>;
    content_created_by?: string | null;
    content_favorite_id?: number | null;
    content_metadata_id?: number | null;
    content_updated_at?: string | null;
    custom_description?: string | null;
    custom_image_data_base64?: string | null;
    custom_image_url?: string | null;
    custom_title?: string | null;
    custom_url?: string | null;
    dashboard_id?: number | null;
    description?: string | null;
    favorite_count?: number | null;
    homepage_section_id?: number | null;
    id?: number;
    image_url?: string | null;
    location?: string | null;
    look_id?: number | null;
    lookml_dashboard_id?: string | null;
    order?: number | null;
    section_fetch_time?: number | null;
    title?: string | null;
    url?: string | null;
    use_custom_description?: boolean;
    use_custom_image?: boolean;
    use_custom_title?: boolean;
    use_custom_url?: boolean;
    view_count?: number | null;
}
export interface IHomepageSection {
    can?: IDictionary<boolean>;
    created_at?: Date | null;
    deleted_at?: Date | null;
    detail_url?: string | null;
    homepage_id?: number | null;
    homepage_items?: IHomepageItem[] | null;
    id?: number;
    is_header?: boolean;
    item_order?: number[] | null;
    title?: string | null;
    updated_at?: Date | null;
    description?: string | null;
    visible_item_order?: string[] | null;
}
export interface IImportedProject {
    name?: string | null;
    url?: string | null;
    ref?: string | null;
    is_remote?: boolean;
    can?: IDictionary<boolean>;
}
export interface IIntegration {
    can?: IDictionary<boolean>;
    id?: string;
    integration_hub_id?: number;
    label?: string;
    description?: string | null;
    enabled?: boolean;
    params?: IIntegrationParam[];
    supported_formats?: SupportedFormats[];
    supported_action_types?: SupportedActionTypes[];
    supported_formattings?: SupportedFormattings[];
    supported_visualization_formattings?: SupportedVisualizationFormattings[];
    supported_download_settings?: SupportedDownloadSettings[];
    icon_url?: string | null;
    uses_oauth?: boolean | null;
    required_fields?: IIntegrationRequiredField[];
    privacy_link?: string | null;
    delegate_oauth?: boolean | null;
    installed_delegate_oauth_targets?: number[];
}
export interface IIntegrationHub {
    can?: IDictionary<boolean>;
    id?: number;
    url?: string;
    label?: string;
    official?: boolean;
    fetch_error_message?: string | null;
    authorization_token?: string | null;
    has_authorization_token?: boolean;
    legal_agreement_signed?: boolean;
    legal_agreement_required?: boolean;
    legal_agreement_text?: string | null;
}
export interface IIntegrationParam {
    name?: string | null;
    label?: string | null;
    description?: string | null;
    required?: boolean;
    has_value?: boolean;
    value?: string | null;
    user_attribute_name?: string | null;
    sensitive?: boolean;
    per_user?: boolean;
    delegate_oauth_url?: string | null;
}
export interface IIntegrationRequiredField {
    tag?: string | null;
    any_tag?: string[] | null;
    all_tags?: string[] | null;
}
export interface IIntegrationTestResult {
    success?: boolean;
    message?: string | null;
    delegate_oauth_result?: IDelegateOauthTest[] | null;
}
export interface IInternalHelpResources {
    can?: IDictionary<boolean>;
    enabled?: boolean;
}
export interface IInternalHelpResourcesContent {
    can?: IDictionary<boolean>;
    organization_name?: string | null;
    markdown_content?: string | null;
}
export interface ILDAPConfig {
    can?: IDictionary<boolean>;
    alternate_email_login_allowed?: boolean;
    auth_password?: string | null;
    auth_requires_role?: boolean;
    auth_username?: string | null;
    connection_host?: string | null;
    connection_port?: string | null;
    connection_tls?: boolean;
    connection_tls_no_verify?: boolean;
    default_new_user_group_ids?: number[] | null;
    default_new_user_groups?: IGroup[] | null;
    default_new_user_role_ids?: number[] | null;
    default_new_user_roles?: IRole[] | null;
    enabled?: boolean;
    force_no_page?: boolean;
    groups?: ILDAPGroupRead[] | null;
    groups_base_dn?: string | null;
    groups_finder_type?: string | null;
    groups_member_attribute?: string | null;
    groups_objectclasses?: string | null;
    groups_user_attribute?: string | null;
    groups_with_role_ids?: ILDAPGroupWrite[] | null;
    has_auth_password?: boolean;
    merge_new_users_by_email?: boolean;
    modified_at?: string | null;
    modified_by?: string | null;
    set_roles_from_groups?: boolean;
    test_ldap_password?: string | null;
    test_ldap_user?: string | null;
    user_attribute_map_email?: string | null;
    user_attribute_map_first_name?: string | null;
    user_attribute_map_last_name?: string | null;
    user_attribute_map_ldap_id?: string | null;
    user_attributes?: ILDAPUserAttributeRead[] | null;
    user_attributes_with_ids?: ILDAPUserAttributeWrite[] | null;
    user_bind_base_dn?: string | null;
    user_custom_filter?: string | null;
    user_id_attribute_names?: string | null;
    user_objectclass?: string | null;
    allow_normal_group_membership?: boolean;
    allow_roles_from_normal_groups?: boolean;
    allow_direct_roles?: boolean;
    url?: Url | null;
}
export interface ILDAPConfigTestIssue {
    severity?: string | null;
    message?: string | null;
    can?: IDictionary<boolean>;
}
export interface ILDAPConfigTestResult {
    details?: string | null;
    issues?: ILDAPConfigTestIssue[] | null;
    message?: string | null;
    status?: string | null;
    trace?: string | null;
    user?: ILDAPUser;
    url?: Url | null;
}
export interface ILDAPGroupRead {
    id?: number;
    looker_group_id?: number | null;
    looker_group_name?: string | null;
    name?: string | null;
    roles?: IRole[] | null;
    url?: Url | null;
}
export interface ILDAPGroupWrite {
    id?: number | null;
    looker_group_id?: number | null;
    looker_group_name?: string | null;
    name?: string | null;
    role_ids?: number[] | null;
    url?: Url | null;
}
export interface ILDAPUser {
    all_emails?: string[] | null;
    attributes?: IDictionary<string> | null;
    email?: string | null;
    first_name?: string | null;
    groups?: string[] | null;
    last_name?: string | null;
    ldap_dn?: string | null;
    ldap_id?: string | null;
    roles?: string[] | null;
    can?: IDictionary<boolean>;
    url?: Url | null;
}
export interface ILDAPUserAttributeRead {
    name?: string | null;
    required?: boolean;
    user_attributes?: IUserAttribute[] | null;
    url?: Url | null;
}
export interface ILDAPUserAttributeWrite {
    name?: string | null;
    required?: boolean;
    user_attribute_ids?: number[] | null;
    url?: Url | null;
}
export interface ILegacyFeature {
    can?: IDictionary<boolean>;
    id?: string;
    name?: string | null;
    description?: string | null;
    enabled_locally?: boolean;
    enabled?: boolean;
    disallowed_as_of_version?: string | null;
    disable_on_upgrade_to_version?: string | null;
    end_of_life_version?: string | null;
    documentation_url?: string | null;
    approximate_disable_date?: Date | null;
    approximate_end_of_life_date?: Date | null;
    has_disabled_on_upgrade?: boolean;
}
export interface ILocale {
    code?: string | null;
    native_name?: string | null;
    english_name?: string | null;
}
export interface ILocalizationSettings {
    default_locale?: string | null;
    localization_level?: string | null;
    can?: IDictionary<boolean>;
}
export interface ILook {
    can?: IDictionary<boolean>;
    content_metadata_id?: number | null;
    id?: number;
    title?: string | null;
    content_favorite_id?: number | null;
    created_at?: Date | null;
    deleted?: boolean;
    deleted_at?: Date | null;
    deleter_id?: number | null;
    description?: string | null;
    embed_url?: string | null;
    excel_file_url?: string | null;
    favorite_count?: number | null;
    google_spreadsheet_formula?: string | null;
    image_embed_url?: string | null;
    is_run_on_load?: boolean;
    last_accessed_at?: Date | null;
    last_updater_id?: number | null;
    last_viewed_at?: Date | null;
    model?: ILookModel;
    public?: boolean | null;
    public_slug?: string | null;
    public_url?: string | null;
    query_id?: number | null;
    short_url?: string | null;
    folder?: IFolderBase;
    folder_id?: string | null;
    updated_at?: Date | null;
    user_id?: number | null;
    view_count?: number | null;
    user?: IUserIdOnly;
    space_id?: string | null;
    space?: ISpaceBase;
}
export interface ILookBasic {
    can?: IDictionary<boolean>;
    content_metadata_id?: number | null;
    id?: number;
    title?: string | null;
}
export interface ILookmlModel {
    can?: IDictionary<boolean>;
    allowed_db_connection_names?: string[] | null;
    explores?: ILookmlModelNavExplore[] | null;
    has_content?: boolean;
    label?: string | null;
    name?: string | null;
    project_name?: string | null;
    unlimited_db_connections?: boolean;
}
export interface ILookmlModelExplore {
    id?: string;
    name?: string | null;
    description?: string;
    label?: string | null;
    scopes?: string[] | null;
    can_total?: boolean;
    can_save?: boolean;
    can_explain?: boolean;
    can_pivot_in_db?: boolean;
    can_subtotal?: boolean;
    has_timezone_support?: boolean;
    supports_cost_estimate?: boolean;
    connection_name?: string | null;
    null_sort_treatment?: string | null;
    files?: string[] | null;
    source_file?: string | null;
    project_name?: string | null;
    model_name?: string | null;
    view_name?: string | null;
    hidden?: boolean;
    sql_table_name?: string | null;
    access_filter_fields?: string[] | null;
    access_filters?: ILookmlModelExploreAccessFilter[] | null;
    aliases?: ILookmlModelExploreAlias[] | null;
    always_filter?: ILookmlModelExploreAlwaysFilter[] | null;
    conditionally_filter?: ILookmlModelExploreConditionallyFilter[] | null;
    index_fields?: string[] | null;
    sets?: ILookmlModelExploreSet[] | null;
    tags?: string[] | null;
    errors?: ILookmlModelExploreError[] | null;
    fields?: ILookmlModelExploreFieldset;
    joins?: ILookmlModelExploreJoins[] | null;
    group_label?: string | null;
    supported_measure_types?: ILookmlModelExploreSupportedMeasureType[];
}
export interface ILookmlModelExploreAccessFilter {
    field?: string | null;
    user_attribute?: string | null;
}
export interface ILookmlModelExploreAlias {
    name?: string | null;
    value?: string | null;
}
export interface ILookmlModelExploreAlwaysFilter {
    name?: string | null;
    value?: string | null;
}
export interface ILookmlModelExploreConditionallyFilter {
    name?: string | null;
    value?: string | null;
}
export interface ILookmlModelExploreError {
    message?: string | null;
    details?: any | null;
    error_pos?: string | null;
    field_error?: boolean;
}
export interface ILookmlModelExploreField {
    align?: Align;
    can_filter?: boolean;
    category?: Category | null;
    default_filter_value?: string | null;
    description?: string | null;
    dimension_group?: string | null;
    enumerations?: ILookmlModelExploreFieldEnumeration[] | null;
    error?: string | null;
    field_group_label?: string | null;
    field_group_variant?: string | null;
    fill_style?: FillStyle | null;
    fiscal_month_offset?: number;
    has_allowed_values?: boolean;
    hidden?: boolean;
    is_filter?: boolean;
    is_fiscal?: boolean;
    is_numeric?: boolean;
    is_timeframe?: boolean;
    can_time_filter?: boolean;
    time_interval?: ILookmlModelExploreFieldTimeInterval;
    label?: string;
    label_from_parameter?: string | null;
    label_short?: string;
    lookml_link?: string | null;
    map_layer?: ILookmlModelExploreFieldMapLayer;
    measure?: boolean;
    name?: string;
    strict_value_format?: boolean;
    parameter?: boolean;
    permanent?: boolean | null;
    primary_key?: boolean;
    project_name?: string | null;
    requires_refresh_on_sort?: boolean;
    scope?: string;
    sortable?: boolean;
    source_file?: string;
    source_file_path?: string;
    sql?: string | null;
    sql_case?: ILookmlModelExploreFieldSqlCase[] | null;
    filters?: ILookmlModelExploreFieldMeasureFilters[] | null;
    suggest_dimension?: string;
    suggest_explore?: string;
    suggestable?: boolean;
    suggestions?: string[] | null;
    tags?: string[];
    type?: string;
    user_attribute_filter_types?: UserAttributeFilterTypes[];
    value_format?: string | null;
    view?: string;
    view_label?: string;
    dynamic?: boolean;
    week_start_day?: WeekStartDay;
}
export interface ILookmlModelExploreFieldEnumeration {
    label?: string | null;
    value?: any | null;
}
export interface ILookmlModelExploreFieldMapLayer {
    url?: string;
    name?: string;
    feature_key?: string | null;
    property_key?: string | null;
    property_label_key?: string | null;
    projection?: string | null;
    format?: Format;
    extents_json_url?: string | null;
    max_zoom_level?: number | null;
    min_zoom_level?: number | null;
}
export interface ILookmlModelExploreFieldMeasureFilters {
    field?: string | null;
    condition?: string | null;
}
export interface ILookmlModelExploreFieldset {
    dimensions?: ILookmlModelExploreField[] | null;
    measures?: ILookmlModelExploreField[] | null;
    filters?: ILookmlModelExploreField[] | null;
    parameters?: ILookmlModelExploreField[] | null;
}
export interface ILookmlModelExploreFieldSqlCase {
    value?: string | null;
    condition?: string | null;
}
export interface ILookmlModelExploreFieldTimeInterval {
    name?: Name;
    count?: number;
}
export interface ILookmlModelExploreJoins {
    name?: string | null;
    dependent_fields?: string[] | null;
    fields?: string[];
    foreign_key?: string;
    from?: string;
    outer_only?: boolean | null;
    relationship?: string | null;
    required_joins?: string[];
    sql_foreign_key?: string;
    sql_on?: string;
    sql_table_name?: string;
    type?: string;
    view_label?: string;
}
export interface ILookmlModelExploreSet {
    name?: string | null;
    value?: string[] | null;
}
export interface ILookmlModelExploreSupportedMeasureType {
    dimension_type?: string | null;
    measure_types?: string[] | null;
}
export interface ILookmlModelNavExplore {
    name?: string | null;
    description?: string;
    label?: string | null;
    hidden?: boolean;
    group_label?: string | null;
    can?: IDictionary<boolean>;
}
export interface ILookmlTest {
    can?: IDictionary<boolean>;
    model_name?: string;
    name?: string;
    explore_name?: string;
    query_url_params?: string;
    file?: string;
    line?: number | null;
}
export interface ILookmlTestResult {
    can?: IDictionary<boolean>;
    model_name?: string;
    test_name?: string;
    assertions_count?: number;
    assertions_failed?: number;
    errors?: IProjectError[] | null;
    warnings?: IProjectError[] | null;
    success?: boolean;
}
export interface ILookModel {
    id?: string;
    label?: string | null;
}
export interface ILookWithDashboards {
    can?: IDictionary<boolean>;
    content_metadata_id?: number | null;
    id?: number;
    title?: string | null;
    content_favorite_id?: number | null;
    created_at?: Date | null;
    deleted?: boolean;
    deleted_at?: Date | null;
    deleter_id?: number | null;
    description?: string | null;
    embed_url?: string | null;
    excel_file_url?: string | null;
    favorite_count?: number | null;
    google_spreadsheet_formula?: string | null;
    image_embed_url?: string | null;
    is_run_on_load?: boolean;
    last_accessed_at?: Date | null;
    last_updater_id?: number | null;
    last_viewed_at?: Date | null;
    model?: ILookModel;
    public?: boolean | null;
    public_slug?: string | null;
    public_url?: string | null;
    query_id?: number | null;
    short_url?: string | null;
    folder?: IFolderBase;
    folder_id?: string | null;
    updated_at?: Date | null;
    user_id?: number | null;
    view_count?: number | null;
    user?: IUserIdOnly;
    space_id?: string | null;
    space?: ISpaceBase;
    dashboards?: IDashboardBase[] | null;
}
export interface ILookWithQuery {
    can?: IDictionary<boolean>;
    content_metadata_id?: number | null;
    id?: number;
    title?: string | null;
    content_favorite_id?: number | null;
    created_at?: Date | null;
    deleted?: boolean;
    deleted_at?: Date | null;
    deleter_id?: number | null;
    description?: string | null;
    embed_url?: string | null;
    excel_file_url?: string | null;
    favorite_count?: number | null;
    google_spreadsheet_formula?: string | null;
    image_embed_url?: string | null;
    is_run_on_load?: boolean;
    last_accessed_at?: Date | null;
    last_updater_id?: number | null;
    last_viewed_at?: Date | null;
    model?: ILookModel;
    public?: boolean | null;
    public_slug?: string | null;
    public_url?: string | null;
    query_id?: number | null;
    short_url?: string | null;
    folder?: IFolderBase;
    folder_id?: string | null;
    updated_at?: Date | null;
    user_id?: number | null;
    view_count?: number | null;
    user?: IUserIdOnly;
    space_id?: string | null;
    space?: ISpaceBase;
    query?: IQuery;
    url?: string | null;
}
export interface IManifest {
    can?: IDictionary<boolean>;
    name?: string | null;
    imports?: IImportedProject[] | null;
    localization_settings?: ILocalizationSettings;
}
export interface IMaterializePDT {
    materialization_id?: string;
    resp_text?: string | null;
}
export interface IMergeFields {
    field_name?: string | null;
    source_field_name?: string | null;
}
export interface IMergeQuery {
    can?: IDictionary<boolean>;
    column_limit?: string | null;
    dynamic_fields?: string | null;
    id?: string;
    pivots?: string[] | null;
    result_maker_id?: number | null;
    sorts?: string[] | null;
    source_queries?: IMergeQuerySourceQuery[] | null;
    total?: boolean;
    vis_config?: IDictionary<string> | null;
}
export interface IMergeQuerySourceQuery {
    merge_fields?: IMergeFields[] | null;
    name?: string | null;
    query_id?: number | null;
}
export interface IModelSet {
    can?: IDictionary<boolean>;
    all_access?: boolean;
    built_in?: boolean;
    id?: number;
    models?: string[] | null;
    name?: string | null;
    url?: Url | null;
}
export interface IModelsNotValidated {
    name?: string | null;
    project_file_id?: string | null;
}
export declare enum Name {
    day = "day",
    hour = "hour",
    minute = "minute",
    second = "second",
    millisecond = "millisecond",
    microsecond = "microsecond",
    week = "week",
    month = "month",
    quarter = "quarter",
    year = "year"
}
export interface IOIDCConfig {
    can?: IDictionary<boolean>;
    alternate_email_login_allowed?: boolean;
    audience?: string | null;
    auth_requires_role?: boolean;
    authorization_endpoint?: Url | null;
    default_new_user_group_ids?: number[] | null;
    default_new_user_groups?: IGroup[] | null;
    default_new_user_role_ids?: number[] | null;
    default_new_user_roles?: IRole[] | null;
    enabled?: boolean;
    groups?: IOIDCGroupRead[] | null;
    groups_attribute?: string | null;
    groups_with_role_ids?: IOIDCGroupWrite[] | null;
    identifier?: string | null;
    issuer?: string | null;
    modified_at?: Date | null;
    modified_by?: number | null;
    new_user_migration_types?: string | null;
    scopes?: string[] | null;
    secret?: string | null;
    set_roles_from_groups?: boolean;
    test_slug?: string | null;
    token_endpoint?: string | null;
    user_attribute_map_email?: string | null;
    user_attribute_map_first_name?: string | null;
    user_attribute_map_last_name?: string | null;
    user_attributes?: IOIDCUserAttributeRead[] | null;
    user_attributes_with_ids?: IOIDCUserAttributeWrite[] | null;
    userinfo_endpoint?: Url | null;
    allow_normal_group_membership?: boolean;
    allow_roles_from_normal_groups?: boolean;
    allow_direct_roles?: boolean;
    url?: Url | null;
}
export interface IOIDCGroupRead {
    id?: number;
    looker_group_id?: number | null;
    looker_group_name?: string | null;
    name?: string | null;
    roles?: IRole[] | null;
}
export interface IOIDCGroupWrite {
    id?: number | null;
    looker_group_id?: number | null;
    looker_group_name?: string | null;
    name?: string | null;
    role_ids?: number[] | null;
    can?: IDictionary<boolean>;
}
export interface IOIDCUserAttributeRead {
    name?: string | null;
    required?: boolean;
    user_attributes?: IUserAttribute[] | null;
}
export interface IOIDCUserAttributeWrite {
    name?: string | null;
    required?: boolean;
    user_attribute_ids?: number[] | null;
    can?: IDictionary<boolean>;
}
export interface IPasswordConfig {
    can?: IDictionary<boolean>;
    min_length?: number | null;
    require_numeric?: boolean;
    require_upperlower?: boolean;
    require_special?: boolean;
}
export interface IPermission {
    can?: IDictionary<boolean>;
    permission?: string | null;
    parent?: string | null;
    description?: string | null;
}
export interface IPermissionSet {
    can?: IDictionary<boolean>;
    all_access?: boolean;
    built_in?: boolean;
    id?: number;
    name?: string | null;
    permissions?: string[] | null;
    url?: Url | null;
}
export declare enum PermissionType {
    view = "view",
    edit = "edit"
}
export interface IProject {
    can?: IDictionary<boolean>;
    id?: string;
    name?: string;
    uses_git?: boolean;
    git_remote_url?: string | null;
    git_username?: string | null;
    git_password?: string | null;
    git_production_branch_name?: string;
    use_git_cookie_auth?: boolean;
    git_username_user_attribute?: string | null;
    git_password_user_attribute?: string | null;
    git_service_name?: string | null;
    git_application_server_http_port?: number | null;
    git_application_server_http_scheme?: string | null;
    deploy_secret?: string | null;
    unset_deploy_secret?: boolean;
    pull_request_mode?: PullRequestMode;
    validation_required?: boolean;
    git_release_mgmt_enabled?: boolean;
    allow_warnings?: boolean;
    is_example?: boolean;
}
export interface IProjectError {
    code?: string | null;
    severity?: string | null;
    kind?: string | null;
    message?: string | null;
    field_name?: string | null;
    file_path?: string | null;
    line_number?: number | null;
    model_id?: string | null;
    explore?: string | null;
    help_url?: string | null;
    params?: IDictionary<string> | null;
    sanitized_message?: string | null;
}
export interface IProjectFile {
    can?: IDictionary<boolean>;
    id?: string;
    path?: string | null;
    title?: string | null;
    type?: string | null;
    extension?: string | null;
    mime_type?: string | null;
    editable?: boolean;
    git_status?: IGitStatus;
}
export interface IProjectValidation {
    errors?: IProjectError[] | null;
    project_digest?: string | null;
    models_not_validated?: IModelsNotValidated[] | null;
    computation_time?: number | null;
}
export interface IProjectValidationCache {
    errors?: IProjectError[] | null;
    project_digest?: string | null;
    models_not_validated?: IModelsNotValidated[] | null;
    computation_time?: number | null;
    stale?: boolean;
}
export interface IProjectWorkspace {
    can?: IDictionary<boolean>;
    project_id?: string | null;
    workspace_id?: string | null;
    git_status?: string | null;
    git_head?: string | null;
    dependency_status?: DependencyStatus | null;
    git_branch?: IGitBranch;
    lookml_type?: string | null;
}
export declare enum PullRequestMode {
    off = "off",
    links = "links",
    recommended = "recommended",
    required = "required"
}
export interface IQuery {
    can?: IDictionary<boolean>;
    id?: number;
    model: string;
    view: string;
    fields?: string[] | null;
    pivots?: string[];
    fill_fields?: string[];
    filters?: IDictionary<string>;
    filter_expression?: string;
    sorts?: string[] | null;
    limit?: string;
    column_limit?: string;
    total?: boolean | null;
    row_total?: string;
    subtotals?: string[];
    vis_config?: IDictionary<any> | null;
    filter_config?: IDictionary<any> | null;
    visible_ui_sections?: string;
    slug?: string | null;
    dynamic_fields?: string;
    client_id?: string | null;
    share_url?: string | null;
    expanded_share_url?: string | null;
    url?: string | null;
    query_timezone?: string;
    has_table_calculations?: boolean;
    runtime?: number;
}
export interface IQueryTask {
    can?: IDictionary<boolean>;
    id?: string;
    query_id?: number | null;
    query?: IQuery;
    generate_links?: boolean;
    force_production?: boolean;
    path_prefix?: string | null;
    cache?: boolean;
    server_table_calcs?: boolean;
    cache_only?: boolean;
    cache_key?: string | null;
    status?: string | null;
    source?: string | null;
    runtime?: number | null;
    rebuild_pdts?: boolean;
    result_source?: string | null;
    look_id?: number | null;
    dashboard_id?: string | null;
    result_format?: string | null;
}
export interface IRenderTask {
    can?: IDictionary<boolean>;
    created_at?: string | null;
    dashboard_filters?: string | null;
    dashboard_id?: number | null;
    dashboard_style?: string | null;
    finalized_at?: string | null;
    height?: number | null;
    id?: string;
    look_id?: number | null;
    lookml_dashboard_id?: string | null;
    query_id?: number | null;
    dashboard_element_id?: string | null;
    query_runtime?: number | null;
    render_runtime?: number | null;
    result_format?: string | null;
    runtime?: number | null;
    status?: string | null;
    status_detail?: string | null;
    user_id?: number | null;
    width?: number | null;
}
export interface IRepositoryCredential {
    can?: IDictionary<boolean>;
    id?: string;
    root_project_id?: string;
    remote_url?: string;
    git_username?: string | null;
    git_password?: string | null;
    ssh_public_key?: string | null;
    is_configured?: boolean;
}
export interface IRequestActiveThemes {
    name?: string | null;
    ts?: Date | null;
    fields?: string | null;
}
export interface IRequestAllGroups {
    fields?: string | null;
    page?: number | null;
    per_page?: number | null;
    sorts?: string | null;
    ids?: DelimArray<number> | null;
    content_metadata_id?: number | null;
    can_add_to_content_metadata?: boolean | null;
}
export interface IRequestAllGroupUsers {
    group_id: number;
    fields?: string | null;
    page?: number | null;
    per_page?: number | null;
    sorts?: string | null;
}
export interface IRequestAllHomepageItems {
    fields?: string | null;
    sorts?: string | null;
    homepage_section_id?: string | null;
}
export interface IRequestAllHomepageSections {
    fields?: string | null;
    sorts?: string | null;
}
export interface IRequestAllIntegrations {
    fields?: string | null;
    integration_hub_id?: string | null;
}
export interface IRequestAllRoles {
    fields?: string | null;
    ids?: DelimArray<number> | null;
}
export interface IRequestAllScheduledPlans {
    user_id?: number | null;
    fields?: string | null;
    all_users?: boolean | null;
}
export interface IRequestAllUserAttributes {
    fields?: string | null;
    sorts?: string | null;
}
export interface IRequestAllUsers {
    fields?: string | null;
    page?: number | null;
    per_page?: number | null;
    sorts?: string | null;
    ids?: DelimArray<number> | null;
}
export interface IRequestContentThumbnail {
    type: string;
    resource_id: string;
    reload?: string | null;
    theme?: string | null;
    format?: string | null;
    width?: number | null;
    height?: number | null;
}
export interface IRequestCreateDashboardElement {
    body: IWriteDashboardElement;
    fields?: string | null;
    apply_filters?: boolean | null;
}
export interface IRequestCreateDashboardRenderTask {
    dashboard_id: number;
    result_format: string;
    body: ICreateDashboardRenderTask;
    width: number;
    height: number;
    fields?: string | null;
    pdf_paper_size?: string | null;
    pdf_landscape?: boolean | null;
}
export interface IRequestCreateLookmlDashboardRenderTask {
    dashboard_id: string;
    result_format: string;
    body: ICreateDashboardRenderTask;
    width: number;
    height: number;
    fields?: string | null;
    pdf_paper_size?: string | null;
    pdf_landscape?: boolean | null;
}
export interface IRequestCreateQueryTask {
    body: IWriteCreateQueryTask;
    limit?: number | null;
    apply_formatting?: boolean | null;
    apply_vis?: boolean | null;
    cache?: boolean | null;
    generate_drill_links?: boolean | null;
    force_production?: boolean | null;
    cache_only?: boolean | null;
    path_prefix?: string | null;
    rebuild_pdts?: boolean | null;
    server_table_calcs?: boolean | null;
    image_width?: number | null;
    image_height?: number | null;
    fields?: string | null;
}
export interface IRequestCreateUserCredentialsEmailPasswordReset {
    user_id: number;
    expires?: boolean | null;
    fields?: string | null;
}
export interface IRequestDeployRefToProduction {
    project_id: string;
    branch?: string | null;
    ref?: string | null;
}
export interface IRequestFolderChildren {
    folder_id: string;
    fields?: string | null;
    page?: number | null;
    per_page?: number | null;
    sorts?: string | null;
}
export interface IRequestFolderChildrenSearch {
    folder_id: string;
    fields?: string | null;
    sorts?: string | null;
    name?: string | null;
}
export interface IRequestGraphDerivedTablesForModel {
    model: string;
    format?: string | null;
    color?: string | null;
}
export interface IRequestGraphDerivedTablesForView {
    view: string;
    models?: string | null;
    workspace?: string | null;
}
export interface IRequestLogin {
    client_id?: string | null;
    client_secret?: string | null;
}
export interface IRequestRoleUsers {
    role_id: number;
    fields?: string | null;
    direct_association_only?: boolean | null;
}
export interface IRequestRunGitConnectionTest {
    project_id: string;
    test_id: string;
    remote_url?: string | null;
    use_production?: string | null;
}
export interface IRequestRunInlineQuery {
    result_format: string;
    body: IWriteQuery;
    limit?: number | null;
    apply_formatting?: boolean | null;
    apply_vis?: boolean | null;
    cache?: boolean | null;
    image_width?: number | null;
    image_height?: number | null;
    generate_drill_links?: boolean | null;
    force_production?: boolean | null;
    cache_only?: boolean | null;
    path_prefix?: string | null;
    rebuild_pdts?: boolean | null;
    server_table_calcs?: boolean | null;
}
export interface IRequestRunLook {
    look_id: number;
    result_format: string;
    limit?: number | null;
    apply_formatting?: boolean | null;
    apply_vis?: boolean | null;
    cache?: boolean | null;
    image_width?: number | null;
    image_height?: number | null;
    generate_drill_links?: boolean | null;
    force_production?: boolean | null;
    cache_only?: boolean | null;
    path_prefix?: string | null;
    rebuild_pdts?: boolean | null;
    server_table_calcs?: boolean | null;
}
export interface IRequestRunLookmlTest {
    project_id: string;
    file_id?: string | null;
    test?: string | null;
    model?: string | null;
}
export interface IRequestRunQuery {
    query_id: number;
    result_format: string;
    limit?: number | null;
    apply_formatting?: boolean | null;
    apply_vis?: boolean | null;
    cache?: boolean | null;
    image_width?: number | null;
    image_height?: number | null;
    generate_drill_links?: boolean | null;
    force_production?: boolean | null;
    cache_only?: boolean | null;
    path_prefix?: string | null;
    rebuild_pdts?: boolean | null;
    server_table_calcs?: boolean | null;
}
export interface IRequestScheduledPlansForDashboard {
    dashboard_id: number;
    user_id?: number | null;
    all_users?: boolean | null;
    fields?: string | null;
}
export interface IRequestScheduledPlansForLook {
    look_id: number;
    user_id?: number | null;
    fields?: string | null;
    all_users?: boolean | null;
}
export interface IRequestScheduledPlansForLookmlDashboard {
    lookml_dashboard_id: string;
    user_id?: number | null;
    fields?: string | null;
    all_users?: boolean | null;
}
export interface IRequestSearchContentFavorites {
    id?: number | null;
    user_id?: number | null;
    content_metadata_id?: number | null;
    dashboard_id?: number | null;
    look_id?: number | null;
    limit?: number | null;
    offset?: number | null;
    sorts?: string | null;
    fields?: string | null;
    filter_or?: boolean | null;
}
export interface IRequestSearchContentViews {
    view_count?: number | null;
    group_id?: number | null;
    look_id?: string | null;
    dashboard_id?: string | null;
    content_metadata_id?: number | null;
    start_of_week_date?: string | null;
    all_time?: boolean | null;
    user_id?: number | null;
    fields?: string | null;
    limit?: number | null;
    offset?: number | null;
    sorts?: string | null;
    filter_or?: boolean | null;
}
export interface IRequestSearchDashboardElements {
    dashboard_id?: number | null;
    look_id?: number | null;
    title?: string | null;
    deleted?: boolean | null;
    fields?: string | null;
    filter_or?: boolean | null;
    sorts?: string | null;
}
export interface IRequestSearchDashboards {
    id?: number | null;
    slug?: string | null;
    title?: string | null;
    description?: string | null;
    content_favorite_id?: number | null;
    space_id?: string | null;
    folder_id?: string | null;
    deleted?: string | null;
    user_id?: string | null;
    view_count?: string | null;
    content_metadata_id?: number | null;
    curate?: boolean | null;
    fields?: string | null;
    page?: number | null;
    per_page?: number | null;
    sorts?: string | null;
    filter_or?: boolean | null;
}
export interface IRequestSearchFolders {
    fields?: string | null;
    page?: number | null;
    per_page?: number | null;
    limit?: number | null;
    offset?: number | null;
    sorts?: string | null;
    name?: string | null;
    id?: number | null;
    parent_id?: string | null;
    creator_id?: string | null;
    filter_or?: boolean | null;
    is_shared_root?: boolean | null;
    is_users_root?: boolean | null;
}
export interface IRequestSearchGroups {
    fields?: string | null;
    limit?: number | null;
    offset?: number | null;
    sorts?: string | null;
    filter_or?: boolean | null;
    id?: number | null;
    name?: string | null;
    external_group_id?: string | null;
    externally_managed?: boolean | null;
    externally_orphaned?: boolean | null;
}
export interface IRequestSearchHomepages {
    title?: string | null;
    created_at?: string | null;
    first_name?: string | null;
    last_name?: string | null;
    fields?: string | null;
    favorited?: boolean | null;
    creator_id?: string | null;
    page?: number | null;
    per_page?: number | null;
    offset?: number | null;
    limit?: number | null;
    sorts?: string | null;
    filter_or?: boolean | null;
}
export interface IRequestSearchLooks {
    id?: string | null;
    title?: string | null;
    description?: string | null;
    content_favorite_id?: number | null;
    space_id?: string | null;
    user_id?: string | null;
    view_count?: string | null;
    deleted?: boolean | null;
    query_id?: number | null;
    curate?: boolean | null;
    fields?: string | null;
    page?: number | null;
    per_page?: number | null;
    sorts?: string | null;
    filter_or?: boolean | null;
}
export interface IRequestSearchModelSets {
    fields?: string | null;
    limit?: number | null;
    offset?: number | null;
    sorts?: string | null;
    id?: number | null;
    name?: string | null;
    all_access?: boolean | null;
    built_in?: boolean | null;
    filter_or?: boolean | null;
}
export interface IRequestSearchPermissionSets {
    fields?: string | null;
    limit?: number | null;
    offset?: number | null;
    sorts?: string | null;
    id?: number | null;
    name?: string | null;
    all_access?: boolean | null;
    built_in?: boolean | null;
    filter_or?: boolean | null;
}
export interface IRequestSearchRoles {
    fields?: string | null;
    limit?: number | null;
    offset?: number | null;
    sorts?: string | null;
    id?: number | null;
    name?: string | null;
    built_in?: boolean | null;
    filter_or?: boolean | null;
}
export interface IRequestSearchSpaces {
    fields?: string | null;
    page?: number | null;
    per_page?: number | null;
    limit?: number | null;
    offset?: number | null;
    sorts?: string | null;
    name?: string | null;
    id?: number | null;
    parent_id?: string | null;
    creator_id?: string | null;
    filter_or?: boolean | null;
    is_shared_root?: boolean | null;
    is_users_root?: boolean | null;
}
export interface IRequestSearchThemes {
    id?: number | null;
    name?: string | null;
    begin_at?: Date | null;
    end_at?: Date | null;
    limit?: number | null;
    offset?: number | null;
    sorts?: string | null;
    fields?: string | null;
    filter_or?: boolean | null;
}
export interface IRequestSearchUserLoginLockouts {
    fields?: string | null;
    page?: number | null;
    per_page?: number | null;
    sorts?: string | null;
    auth_type?: string | null;
    full_name?: string | null;
    email?: string | null;
    remote_id?: string | null;
    filter_or?: boolean | null;
}
export interface IRequestSearchUsers {
    fields?: string | null;
    page?: number | null;
    per_page?: number | null;
    sorts?: string | null;
    id?: number | null;
    first_name?: string | null;
    last_name?: string | null;
    verified_looker_employee?: boolean | null;
    embed_user?: boolean | null;
    email?: string | null;
    is_disabled?: boolean | null;
    filter_or?: boolean | null;
    content_metadata_id?: number | null;
    group_id?: number | null;
}
export interface IRequestSearchUsersNames {
    pattern: string;
    fields?: string | null;
    page?: number | null;
    per_page?: number | null;
    sorts?: string | null;
    id?: number | null;
    first_name?: string | null;
    last_name?: string | null;
    verified_looker_employee?: boolean | null;
    email?: string | null;
    is_disabled?: boolean | null;
}
export interface IRequestSpaceChildren {
    space_id: string;
    fields?: string | null;
    page?: number | null;
    per_page?: number | null;
    sorts?: string | null;
}
export interface IRequestSpaceChildrenSearch {
    space_id: string;
    fields?: string | null;
    sorts?: string | null;
    name?: string | null;
}
export interface IRequestStartPdtBuild {
    model_name: string;
    view_name: string;
    force_rebuild?: string | null;
    force_full_incremental?: string | null;
    workspace?: string | null;
    source?: string | null;
}
export interface IRequestTagRef {
    project_id: string;
    body: IWriteProject;
    commit_sha?: string | null;
    tag_name?: string | null;
    tag_message?: string | null;
}
export interface IRequestUserAttributeUserValues {
    user_id: number;
    fields?: string | null;
    user_attribute_ids?: DelimArray<number> | null;
    all_values?: boolean | null;
    include_unset?: boolean | null;
}
export interface IRequestUserRoles {
    user_id: number;
    fields?: string | null;
    direct_association_only?: boolean | null;
}
export declare enum ResultFormat {
    inline_json = "inline_json",
    json = "json",
    json_detail = "json_detail",
    json_fe = "json_fe",
    json_bi = "json_bi",
    csv = "csv",
    html = "html",
    md = "md",
    txt = "txt",
    xlsx = "xlsx",
    gsxml = "gsxml",
    sql = "sql"
}
export interface IResultMakerFilterables {
    model?: string | null;
    view?: string | null;
    name?: string | null;
    listen?: IResultMakerFilterablesListen[] | null;
}
export interface IResultMakerFilterablesListen {
    dashboard_filter_name?: string | null;
    field?: string | null;
}
export interface IResultMakerWithIdVisConfigAndDynamicFields {
    id?: number;
    dynamic_fields?: string | null;
    filterables?: IResultMakerFilterables[] | null;
    sorts?: string[] | null;
    merge_result_id?: string | null;
    total?: boolean;
    query_id?: number | null;
    sql_query_id?: string | null;
    query?: IQuery;
    vis_config?: IDictionary<string> | null;
}
export interface IRole {
    can?: IDictionary<boolean>;
    id?: number;
    name?: string | null;
    permission_set?: IPermissionSet;
    permission_set_id?: number | null;
    model_set?: IModelSet;
    model_set_id?: number | null;
    url?: Url | null;
    users_url?: Url | null;
}
export interface IRunningQueries {
    can?: IDictionary<boolean>;
    id?: number;
    user?: IUserPublic;
    query?: IQuery;
    sql_query?: ISqlQuery;
    look?: ILookBasic;
    created_at?: string | null;
    completed_at?: string | null;
    query_id?: string | null;
    source?: string | null;
    node_id?: string | null;
    slug?: string | null;
    query_task_id?: string | null;
    cache_key?: string | null;
    connection_name?: string | null;
    dialect?: string | null;
    connection_id?: string | null;
    message?: string | null;
    status?: string | null;
    runtime?: number | null;
    sql?: string | null;
}
export interface ISamlConfig {
    can?: IDictionary<boolean>;
    enabled?: boolean;
    idp_cert?: string | null;
    idp_url?: string | null;
    idp_issuer?: string | null;
    idp_audience?: string | null;
    allowed_clock_drift?: number | null;
    user_attribute_map_email?: string | null;
    user_attribute_map_first_name?: string | null;
    user_attribute_map_last_name?: string | null;
    new_user_migration_types?: string | null;
    alternate_email_login_allowed?: boolean;
    test_slug?: string | null;
    modified_at?: string | null;
    modified_by?: string | null;
    default_new_user_roles?: IRole[] | null;
    default_new_user_groups?: IGroup[] | null;
    default_new_user_role_ids?: number[] | null;
    default_new_user_group_ids?: number[] | null;
    set_roles_from_groups?: boolean;
    groups_attribute?: string | null;
    groups?: ISamlGroupRead[] | null;
    groups_with_role_ids?: ISamlGroupWrite[] | null;
    auth_requires_role?: boolean;
    user_attributes?: ISamlUserAttributeRead[] | null;
    user_attributes_with_ids?: ISamlUserAttributeWrite[] | null;
    groups_finder_type?: string | null;
    groups_member_value?: string | null;
    bypass_login_page?: boolean;
    allow_normal_group_membership?: boolean;
    allow_roles_from_normal_groups?: boolean;
    allow_direct_roles?: boolean;
    url?: Url | null;
}
export interface ISamlGroupRead {
    id?: number;
    looker_group_id?: number | null;
    looker_group_name?: string | null;
    name?: string | null;
    roles?: IRole[] | null;
    url?: Url | null;
}
export interface ISamlGroupWrite {
    id?: number | null;
    looker_group_id?: number | null;
    looker_group_name?: string | null;
    name?: string | null;
    role_ids?: number[] | null;
    url?: Url | null;
}
export interface ISamlMetadataParseResult {
    can?: IDictionary<boolean>;
    idp_issuer?: string | null;
    idp_url?: string | null;
    idp_cert?: string | null;
}
export interface ISamlUserAttributeRead {
    name?: string | null;
    required?: boolean;
    user_attributes?: IUserAttribute[] | null;
    url?: Url | null;
}
export interface ISamlUserAttributeWrite {
    name?: string | null;
    required?: boolean;
    user_attribute_ids?: number[] | null;
    url?: Url | null;
}
export interface IScheduledPlan {
    name?: string | null;
    user_id?: number | null;
    run_as_recipient?: boolean;
    enabled?: boolean;
    look_id?: number | null;
    dashboard_id?: number | null;
    lookml_dashboard_id?: string | null;
    filters_string?: string | null;
    dashboard_filters?: string | null;
    require_results?: boolean;
    require_no_results?: boolean;
    require_change?: boolean;
    send_all_results?: boolean;
    crontab?: string | null;
    datagroup?: string | null;
    timezone?: string | null;
    query_id?: string | null;
    scheduled_plan_destination?: IScheduledPlanDestination[] | null;
    run_once?: boolean;
    include_links?: boolean;
    custom_url_base?: string | null;
    custom_url_params?: string | null;
    custom_url_label?: string | null;
    show_custom_url?: boolean;
    pdf_paper_size?: string | null;
    pdf_landscape?: boolean;
    embed?: boolean;
    color_theme?: string | null;
    long_tables?: boolean;
    inline_table_width?: number | null;
    id?: number;
    created_at?: Date | null;
    updated_at?: Date | null;
    title?: string | null;
    user?: IUserPublic;
    next_run_at?: Date | null;
    last_run_at?: Date | null;
    can?: IDictionary<boolean>;
}
export interface IScheduledPlanDestination {
    id?: number;
    scheduled_plan_id?: number | null;
    format?: string | null;
    apply_formatting?: boolean;
    apply_vis?: boolean;
    address?: string | null;
    looker_recipient?: boolean;
    type?: string | null;
    parameters?: string | null;
    secret_parameters?: string | null;
    message?: string | null;
}
export interface ISession {
    can?: IDictionary<boolean>;
    id?: number;
    ip_address?: string | null;
    browser?: string | null;
    operating_system?: string | null;
    city?: string | null;
    state?: string | null;
    country?: string | null;
    credentials_type?: string | null;
    extended_at?: string | null;
    extended_count?: number | null;
    sudo_user_id?: number | null;
    created_at?: string | null;
    expires_at?: string | null;
    url?: Url | null;
}
export interface ISessionConfig {
    can?: IDictionary<boolean>;
    allow_persistent_sessions?: boolean;
    session_minutes?: number | null;
    unlimited_sessions_per_user?: boolean;
    use_inactivity_based_logout?: boolean;
    track_session_location?: boolean;
}
export interface ISmtpSettings {
    address?: string;
    from?: string;
    user_name?: string;
    password?: string;
    port?: number;
    enable_starttls_auto?: boolean;
    ssl_version?: SslVersion | null;
    default_smtp?: boolean | null;
}
export interface ISnippet {
    name?: string;
    label?: string;
    sql?: string;
    can?: IDictionary<boolean>;
}
export interface ISpace {
    name: string;
    parent_id?: string | null;
    id?: string;
    content_metadata_id?: number | null;
    created_at?: Date | null;
    creator_id?: number | null;
    child_count?: number | null;
    external_id?: string | null;
    is_embed?: boolean;
    is_embed_shared_root?: boolean;
    is_embed_users_root?: boolean;
    is_personal?: boolean;
    is_personal_descendant?: boolean;
    is_shared_root?: boolean;
    is_users_root?: boolean;
    can?: IDictionary<boolean>;
    dashboards?: IDashboardBase[] | null;
    looks?: ILookWithDashboards[] | null;
}
export interface ISpaceBase {
    name: string;
    parent_id?: string | null;
    id?: string;
    content_metadata_id?: number | null;
    created_at?: Date | null;
    creator_id?: number | null;
    child_count?: number | null;
    external_id?: string | null;
    is_embed?: boolean;
    is_embed_shared_root?: boolean;
    is_embed_users_root?: boolean;
    is_personal?: boolean;
    is_personal_descendant?: boolean;
    is_shared_root?: boolean;
    is_users_root?: boolean;
    can?: IDictionary<boolean>;
}
export interface ISqlQuery {
    can?: IDictionary<boolean>;
    slug?: string;
    last_runtime?: number | null;
    run_count?: number;
    browser_limit?: number;
    sql?: string;
    last_run_at?: string | null;
    connection?: IDBConnectionBase;
    model_name?: string | null;
    creator?: IUserPublic;
    explore_url?: string | null;
    plaintext?: boolean;
    vis_config?: IDictionary<any> | null;
    result_maker_id?: number | null;
}
export interface ISqlQueryCreate {
    connection_name?: string | null;
    connection_id?: string | null;
    model_name?: string | null;
    sql?: string | null;
    vis_config?: IDictionary<any> | null;
}
export declare enum SslVersion {
    TLSv1_1 = "TLSv1_1",
    SSLv23 = "SSLv23",
    TLSv1_2 = "TLSv1_2"
}
export declare enum SupportedActionTypes {
    cell = "cell",
    query = "query",
    dashboard = "dashboard",
    none = "none"
}
export declare enum SupportedDownloadSettings {
    push = "push",
    url = "url"
}
export declare enum SupportedFormats {
    txt = "txt",
    csv = "csv",
    inline_json = "inline_json",
    json = "json",
    json_label = "json_label",
    json_detail = "json_detail",
    json_detail_lite_stream = "json_detail_lite_stream",
    xlsx = "xlsx",
    html = "html",
    wysiwyg_pdf = "wysiwyg_pdf",
    assembled_pdf = "assembled_pdf",
    wysiwyg_png = "wysiwyg_png",
    csv_zip = "csv_zip"
}
export declare enum SupportedFormattings {
    formatted = "formatted",
    unformatted = "unformatted"
}
export declare enum SupportedVisualizationFormattings {
    apply = "apply",
    noapply = "noapply"
}
export interface ITheme {
    can?: IDictionary<boolean>;
    begin_at?: Date | null;
    end_at?: Date | null;
    id?: number;
    name?: string;
    settings?: IThemeSettings;
}
export interface IThemeSettings {
    background_color?: string;
    base_font_size?: string | null;
    color_collection_id?: string;
    font_color?: string | null;
    font_family?: string;
    font_source?: string | null;
    info_button_color?: string;
    primary_button_color?: string;
    show_filters_bar?: boolean;
    show_title?: boolean;
    text_tile_text_color?: string;
    tile_background_color?: string;
    text_tile_background_color?: string;
    tile_text_color?: string;
    title_color?: string;
    warn_button_color?: string;
    tile_title_alignment?: string;
    tile_shadow?: boolean;
    show_last_updated_indicator?: boolean;
    show_reload_data_icon?: boolean;
    show_dashboard_menu?: boolean;
    show_filters_toggle?: boolean;
    show_dashboard_header?: boolean;
    center_dashboard_title?: boolean;
    dashboard_title_font_size?: string;
    box_shadow?: string;
    page_margin_top?: string;
    page_margin_bottom?: string;
    page_margin_sides?: string;
    show_explore_header?: boolean;
    show_explore_title?: boolean;
    show_explore_last_run?: boolean;
    show_explore_timezone?: boolean;
    show_explore_run_stop_button?: boolean;
    show_explore_actions_button?: boolean;
    show_look_header?: boolean;
    show_look_title?: boolean;
    show_look_last_run?: boolean;
    show_look_timezone?: boolean;
    show_look_run_stop_button?: boolean;
    show_look_actions_button?: boolean;
    tile_title_font_size?: string;
    column_gap_size?: string;
    row_gap_size?: string;
    border_radius?: string;
}
export interface ITimezone {
    value?: string | null;
    label?: string | null;
    group?: string | null;
}
export interface IUpdateFolder {
    name?: string;
    parent_id?: string;
}
export interface IUpdateSpace {
    name?: string;
    parent_id?: string;
}
export interface IUser {
    can?: IDictionary<boolean>;
    avatar_url?: Url | null;
    avatar_url_without_sizing?: Url | null;
    credentials_api3?: ICredentialsApi3[] | null;
    credentials_email?: ICredentialsEmail;
    credentials_embed?: ICredentialsEmbed[] | null;
    credentials_google?: ICredentialsGoogle;
    credentials_ldap?: ICredentialsLDAP;
    credentials_looker_openid?: ICredentialsLookerOpenid;
    credentials_oidc?: ICredentialsOIDC;
    credentials_saml?: ICredentialsSaml;
    credentials_totp?: ICredentialsTotp;
    display_name?: string | null;
    email?: string | null;
    embed_group_space_id?: number | null;
    first_name?: string | null;
    group_ids?: number[] | null;
    home_space_id?: string | null;
    home_folder_id?: string | null;
    id?: number;
    is_disabled?: boolean;
    last_name?: string | null;
    locale?: string | null;
    looker_versions?: string[] | null;
    models_dir_validated?: boolean | null;
    personal_space_id?: number | null;
    personal_folder_id?: number | null;
    presumed_looker_employee?: boolean;
    role_ids?: number[] | null;
    sessions?: ISession[] | null;
    ui_state?: IDictionary<string> | null;
    verified_looker_employee?: boolean;
    roles_externally_managed?: boolean;
    allow_direct_roles?: boolean;
    allow_normal_group_membership?: boolean;
    allow_roles_from_normal_groups?: boolean;
    url?: Url | null;
}
export interface IUserAttribute {
    can?: IDictionary<boolean>;
    id?: number;
    name?: string | null;
    label?: string | null;
    type?: string | null;
    default_value?: string | null;
    is_system?: boolean;
    is_permanent?: boolean;
    value_is_hidden?: boolean;
    user_can_view?: boolean;
    user_can_edit?: boolean;
    hidden_value_domain_whitelist?: string;
}
export declare enum UserAttributeFilterTypes {
    advanced_filter_string = "advanced_filter_string",
    advanced_filter_number = "advanced_filter_number",
    advanced_filter_datetime = "advanced_filter_datetime",
    string = "string",
    number = "number",
    datetime = "datetime",
    relative_url = "relative_url",
    yesno = "yesno",
    zipcode = "zipcode"
}
export interface IUserAttributeGroupValue {
    can?: IDictionary<boolean>;
    id?: number;
    group_id?: number | null;
    user_attribute_id?: number | null;
    value_is_hidden?: boolean;
    rank?: number | null;
    value?: string | null;
}
export interface IUserAttributeWithValue {
    can?: IDictionary<boolean>;
    name?: string | null;
    label?: string | null;
    rank?: number | null;
    value?: string | null;
    user_id?: number | null;
    user_can_edit?: boolean;
    value_is_hidden?: boolean;
    user_attribute_id?: number | null;
    source?: string | null;
    hidden_value_domain_whitelist?: string;
}
export interface IUserIdOnly {
    id?: number;
}
export interface IUserLoginLockout {
    can?: IDictionary<boolean>;
    key?: string | null;
    auth_type?: string | null;
    ip?: string | null;
    user_id?: number | null;
    remote_id?: string | null;
    full_name?: string | null;
    email?: string | null;
    fail_count?: number | null;
    lockout_at?: Date | null;
}
export interface IUserPublic {
    can?: IDictionary<boolean>;
    id?: number;
    first_name?: string;
    last_name?: string;
    display_name?: string | null;
    avatar_url?: Url;
    url?: Url | null;
}
export interface IValidationError {
    message: string | null;
    errors?: IValidationErrorDetail[] | null;
    documentation_url: Url | null;
}
export interface IValidationErrorDetail {
    field?: string | null;
    code?: string | null;
    message?: string | null;
    documentation_url: Url | null;
}
export declare enum WeekStartDay {
    monday = "monday",
    tuesday = "tuesday",
    wednesday = "wednesday",
    thursday = "thursday",
    friday = "friday",
    saturday = "saturday",
    sunday = "sunday"
}
export interface IWelcomeEmailTest {
    content?: string | null;
    subject?: string | null;
    header?: string | null;
}
export interface IWhitelabelConfiguration {
    id?: number;
    logo_file?: string | null;
    logo_url?: string | null;
    favicon_file?: string | null;
    favicon_url?: string | null;
    default_title?: string | null;
    show_help_menu?: boolean;
    show_docs?: boolean;
    show_email_sub_options?: boolean;
    allow_looker_mentions?: boolean;
    allow_looker_links?: boolean;
    custom_welcome_email_advanced?: boolean;
    setup_mentions?: boolean;
    alerts_logo?: boolean;
    alerts_links?: boolean;
    folders_mentions?: boolean;
}
export interface IWorkspace {
    can?: IDictionary<boolean>;
    id?: string;
    projects?: IProject[] | null;
}
export interface IWriteApiSession {
    workspace_id?: string | null;
}
export interface IWriteBackupConfiguration {
    type?: string | null;
    custom_s3_bucket?: string | null;
    custom_s3_bucket_region?: string | null;
    custom_s3_key?: string | null;
    custom_s3_secret?: string | null;
}
export interface IWriteColorCollection {
    label?: string;
    categoricalPalettes?: IDiscretePalette[] | null;
    sequentialPalettes?: IContinuousPalette[] | null;
    divergingPalettes?: IContinuousPalette[] | null;
}
export interface IWriteContentFavorite {
    user_id?: number;
    content_metadata_id?: number;
    dashboard?: IWriteDashboardBase | null;
}
export interface IWriteContentMeta {
    inherits?: boolean;
}
export interface IWriteCreateDashboardFilter {
    dashboard_id: string | null;
    name: string | null;
    title: string | null;
    type: string | null;
    default_value?: string | null;
    model?: string | null;
    explore?: string | null;
    dimension?: string | null;
    row?: number | null;
    listens_to_filters?: string[] | null;
    allow_multiple_values?: boolean;
    required?: boolean;
    ui_config?: IDictionary<any> | null;
}
export interface IWriteCreateQueryTask {
    query_id: number | null;
    result_format: ResultFormat | null;
    source?: string | null;
    deferred?: boolean;
    look_id?: number | null;
    dashboard_id?: string | null;
}
export interface IWriteCredentialsEmail {
    email?: string | null;
    forced_password_reset_at_next_login?: boolean;
}
export interface IWriteCustomWelcomeEmail {
    enabled?: boolean;
    content?: string | null;
    subject?: string | null;
    header?: string | null;
}
export interface IWriteDashboard {
    description?: string | null;
    hidden?: boolean;
    query_timezone?: string;
    refresh_interval?: string | null;
    folder?: IWriteFolderBase | null;
    title?: string | null;
    slug?: string | null;
    preferred_viewer?: string | null;
    space?: IWriteSpaceBase | null;
    alert_sync_with_dashboard_filter_enabled?: boolean;
    background_color?: string;
    crossfilter_enabled?: boolean;
    deleted?: boolean;
    enable_viz_full_screen?: boolean;
    filters_bar_collapsed?: boolean;
    filters_location_top?: boolean;
    load_configuration?: string | null;
    lookml_link_id?: string | null;
    show_filters_bar?: boolean;
    show_title?: boolean;
    space_id?: string | null;
    folder_id?: string | null;
    text_tile_text_color?: string;
    tile_background_color?: string;
    tile_text_color?: string;
    title_color?: string;
    appearance?: IDashboardAppearance | null;
}
export interface IWriteDashboardBase {
    folder?: IWriteFolderBase | null;
    space?: IWriteSpaceBase | null;
}
export interface IWriteDashboardElement {
    body_text?: string | null;
    dashboard_id?: string | null;
    look?: IWriteLookWithQuery | null;
    look_id?: string | null;
    merge_result_id?: string | null;
    note_display?: string | null;
    note_state?: string | null;
    note_text?: string | null;
    query?: IWriteQuery | null;
    query_id?: number | null;
    refresh_interval?: string | null;
    result_maker?: IWriteResultMakerWithIdVisConfigAndDynamicFields | null;
    result_maker_id?: number | null;
    subtitle_text?: string | null;
    title?: string | null;
    title_hidden?: boolean;
    title_text?: string | null;
    type?: string | null;
    rich_content_json?: string | null;
}
export interface IWriteDashboardFilter {
    name?: string | null;
    title?: string | null;
    type?: string | null;
    default_value?: string | null;
    model?: string | null;
    explore?: string | null;
    dimension?: string | null;
    row?: number | null;
    listens_to_filters?: string[] | null;
    allow_multiple_values?: boolean;
    required?: boolean;
    ui_config?: IDictionary<any> | null;
}
export interface IWriteDashboardLayout {
    dashboard_id?: string | null;
    type?: string | null;
    active?: boolean;
    column_width?: number | null;
    width?: number | null;
}
export interface IWriteDashboardLayoutComponent {
    dashboard_layout_id?: string | null;
    dashboard_element_id?: string | null;
    row?: number | null;
    column?: number | null;
    width?: number | null;
    height?: number | null;
}
export interface IWriteDatagroup {
    stale_before?: number | null;
    triggered_at?: number | null;
}
export interface IWriteDBConnection {
    name?: string;
    host?: string | null;
    port?: string | null;
    username?: string | null;
    password?: string | null;
    certificate?: string | null;
    file_type?: string | null;
    database?: string | null;
    db_timezone?: string | null;
    query_timezone?: string | null;
    schema?: string | null;
    max_connections?: number | null;
    max_billing_gigabytes?: string | null;
    ssl?: boolean;
    verify_ssl?: boolean;
    tmp_db_name?: string | null;
    jdbc_additional_params?: string | null;
    pool_timeout?: number | null;
    dialect_name?: string | null;
    user_db_credentials?: boolean | null;
    user_attribute_fields?: string[] | null;
    maintenance_cron?: string | null;
    sql_runner_precache_tables?: boolean;
    sql_writing_with_info_schema?: boolean;
    after_connect_statements?: string | null;
    pdt_context_override?: IWriteDBConnectionOverride | null;
    uses_tns?: boolean | null;
}
export interface IWriteDBConnectionOverride {
    context?: string;
    host?: string | null;
    port?: string | null;
    username?: string | null;
    password?: string | null;
    certificate?: string | null;
    file_type?: string | null;
    database?: string | null;
    schema?: string | null;
    jdbc_additional_params?: string | null;
    after_connect_statements?: string | null;
}
export interface IWriteFolderBase {
    name: string;
    parent_id?: string | null;
}
export interface IWriteGitBranch {
    name?: string | null;
    ref?: string | null;
}
export interface IWriteGroup {
    can_add_to_content_metadata?: boolean;
    name?: string | null;
}
export interface IWriteHomepage {
    deleted_at?: Date | null;
    description?: string | null;
    section_order?: number[] | null;
    title?: string | null;
}
export interface IWriteHomepageItem {
    custom_description?: string | null;
    custom_image_data_base64?: string | null;
    custom_title?: string | null;
    custom_url?: string | null;
    dashboard_id?: number | null;
    homepage_section_id?: number | null;
    look_id?: number | null;
    lookml_dashboard_id?: string | null;
    order?: number | null;
    use_custom_description?: boolean;
    use_custom_image?: boolean;
    use_custom_title?: boolean;
    use_custom_url?: boolean;
}
export interface IWriteHomepageSection {
    deleted_at?: Date | null;
    homepage_id?: number | null;
    item_order?: number[] | null;
    title?: string | null;
    description?: string | null;
}
export interface IWriteIntegration {
    enabled?: boolean;
    params?: IIntegrationParam[] | null;
    installed_delegate_oauth_targets?: number[] | null;
}
export interface IWriteIntegrationHub {
    url?: string;
    authorization_token?: string | null;
}
export interface IWriteInternalHelpResources {
    enabled?: boolean;
}
export interface IWriteInternalHelpResourcesContent {
    organization_name?: string | null;
    markdown_content?: string | null;
}
export interface IWriteLDAPConfig {
    alternate_email_login_allowed?: boolean;
    auth_password?: string | null;
    auth_requires_role?: boolean;
    auth_username?: string | null;
    connection_host?: string | null;
    connection_port?: string | null;
    connection_tls?: boolean;
    connection_tls_no_verify?: boolean;
    default_new_user_group_ids?: number[] | null;
    default_new_user_role_ids?: number[] | null;
    enabled?: boolean;
    force_no_page?: boolean;
    groups_base_dn?: string | null;
    groups_finder_type?: string | null;
    groups_member_attribute?: string | null;
    groups_objectclasses?: string | null;
    groups_user_attribute?: string | null;
    groups_with_role_ids?: ILDAPGroupWrite[] | null;
    merge_new_users_by_email?: boolean;
    set_roles_from_groups?: boolean;
    test_ldap_password?: string | null;
    test_ldap_user?: string | null;
    user_attribute_map_email?: string | null;
    user_attribute_map_first_name?: string | null;
    user_attribute_map_last_name?: string | null;
    user_attribute_map_ldap_id?: string | null;
    user_attributes_with_ids?: ILDAPUserAttributeWrite[] | null;
    user_bind_base_dn?: string | null;
    user_custom_filter?: string | null;
    user_id_attribute_names?: string | null;
    user_objectclass?: string | null;
    allow_normal_group_membership?: boolean;
    allow_roles_from_normal_groups?: boolean;
    allow_direct_roles?: boolean;
}
export interface IWriteLegacyFeature {
    enabled_locally?: boolean;
}
export interface IWriteLookmlModel {
    allowed_db_connection_names?: string[] | null;
    name?: string | null;
    project_name?: string | null;
    unlimited_db_connections?: boolean;
}
export interface IWriteLookWithQuery {
    title?: string | null;
    deleted?: boolean;
    description?: string | null;
    is_run_on_load?: boolean;
    public?: boolean | null;
    query_id?: number | null;
    folder?: IWriteFolderBase | null;
    folder_id?: string | null;
    user_id?: number | null;
    space_id?: string | null;
    space?: IWriteSpaceBase | null;
    query?: IWriteQuery | null;
}
export interface IWriteMergeQuery {
    column_limit?: string | null;
    dynamic_fields?: string | null;
    pivots?: string[] | null;
    sorts?: string[] | null;
    source_queries?: IMergeQuerySourceQuery[] | null;
    total?: boolean;
    vis_config?: IDictionary<string> | null;
}
export interface IWriteModelSet {
    models?: string[] | null;
    name?: string | null;
}
export interface IWriteOIDCConfig {
    alternate_email_login_allowed?: boolean;
    audience?: string | null;
    auth_requires_role?: boolean;
    authorization_endpoint?: Url | null;
    default_new_user_group_ids?: number[] | null;
    default_new_user_role_ids?: number[] | null;
    enabled?: boolean;
    groups_attribute?: string | null;
    groups_with_role_ids?: IOIDCGroupWrite[] | null;
    identifier?: string | null;
    issuer?: string | null;
    new_user_migration_types?: string | null;
    scopes?: string[] | null;
    secret?: string | null;
    set_roles_from_groups?: boolean;
    token_endpoint?: string | null;
    user_attribute_map_email?: string | null;
    user_attribute_map_first_name?: string | null;
    user_attribute_map_last_name?: string | null;
    user_attributes_with_ids?: IOIDCUserAttributeWrite[] | null;
    userinfo_endpoint?: Url | null;
    allow_normal_group_membership?: boolean;
    allow_roles_from_normal_groups?: boolean;
    allow_direct_roles?: boolean;
}
export interface IWritePasswordConfig {
    min_length?: number | null;
    require_numeric?: boolean;
    require_upperlower?: boolean;
    require_special?: boolean;
}
export interface IWritePermissionSet {
    name?: string | null;
    permissions?: string[] | null;
}
export interface IWriteProject {
    name?: string;
    git_remote_url?: string | null;
    git_username?: string | null;
    git_password?: string | null;
    git_production_branch_name?: string;
    use_git_cookie_auth?: boolean;
    git_username_user_attribute?: string | null;
    git_password_user_attribute?: string | null;
    git_service_name?: string | null;
    git_application_server_http_port?: number | null;
    git_application_server_http_scheme?: string | null;
    deploy_secret?: string | null;
    unset_deploy_secret?: boolean;
    pull_request_mode?: PullRequestMode | null;
    validation_required?: boolean;
    git_release_mgmt_enabled?: boolean;
    allow_warnings?: boolean;
}
export interface IWriteQuery {
    model: string;
    view: string;
    fields?: string[] | null;
    pivots?: string[] | null;
    fill_fields?: string[] | null;
    filters?: IDictionary<string> | null;
    filter_expression?: string;
    sorts?: string[] | null;
    limit?: string;
    column_limit?: string;
    total?: boolean | null;
    row_total?: string;
    subtotals?: string[] | null;
    vis_config?: IDictionary<any> | null;
    filter_config?: IDictionary<any> | null;
    visible_ui_sections?: string;
    dynamic_fields?: string;
    client_id?: string | null;
    query_timezone?: string;
    runtime?: number;
}
export interface IWriteRepositoryCredential {
    git_username?: string | null;
    git_password?: string | null;
    ssh_public_key?: string | null;
}
export interface IWriteResultMakerWithIdVisConfigAndDynamicFields {
    query?: IWriteQuery | null;
}
export interface IWriteRole {
    name?: string | null;
    permission_set?: IWritePermissionSet | null;
    permission_set_id?: number | null;
    model_set?: IWriteModelSet | null;
    model_set_id?: number | null;
}
export interface IWriteSamlConfig {
    enabled?: boolean;
    idp_cert?: string | null;
    idp_url?: string | null;
    idp_issuer?: string | null;
    idp_audience?: string | null;
    allowed_clock_drift?: number | null;
    user_attribute_map_email?: string | null;
    user_attribute_map_first_name?: string | null;
    user_attribute_map_last_name?: string | null;
    new_user_migration_types?: string | null;
    alternate_email_login_allowed?: boolean;
    default_new_user_role_ids?: number[] | null;
    default_new_user_group_ids?: number[] | null;
    set_roles_from_groups?: boolean;
    groups_attribute?: string | null;
    groups_with_role_ids?: ISamlGroupWrite[] | null;
    auth_requires_role?: boolean;
    user_attributes_with_ids?: ISamlUserAttributeWrite[] | null;
    groups_finder_type?: string | null;
    groups_member_value?: string | null;
    bypass_login_page?: boolean;
    allow_normal_group_membership?: boolean;
    allow_roles_from_normal_groups?: boolean;
    allow_direct_roles?: boolean;
}
export interface IWriteScheduledPlan {
    name?: string | null;
    user_id?: number | null;
    run_as_recipient?: boolean;
    enabled?: boolean;
    look_id?: number | null;
    dashboard_id?: number | null;
    lookml_dashboard_id?: string | null;
    filters_string?: string | null;
    dashboard_filters?: string | null;
    require_results?: boolean;
    require_no_results?: boolean;
    require_change?: boolean;
    send_all_results?: boolean;
    crontab?: string | null;
    datagroup?: string | null;
    timezone?: string | null;
    query_id?: string | null;
    scheduled_plan_destination?: IScheduledPlanDestination[] | null;
    run_once?: boolean;
    include_links?: boolean;
    custom_url_base?: string | null;
    custom_url_params?: string | null;
    custom_url_label?: string | null;
    show_custom_url?: boolean;
    pdf_paper_size?: string | null;
    pdf_landscape?: boolean;
    embed?: boolean;
    color_theme?: string | null;
    long_tables?: boolean;
    inline_table_width?: number | null;
}
export interface IWriteSessionConfig {
    allow_persistent_sessions?: boolean;
    session_minutes?: number | null;
    unlimited_sessions_per_user?: boolean;
    use_inactivity_based_logout?: boolean;
    track_session_location?: boolean;
}
export interface IWriteSpaceBase {
    name: string;
    parent_id?: string | null;
}
export interface IWriteTheme {
    begin_at?: Date | null;
    end_at?: Date | null;
    name?: string;
    settings?: IThemeSettings | null;
}
export interface IWriteUser {
    credentials_email?: IWriteCredentialsEmail | null;
    first_name?: string | null;
    home_space_id?: string | null;
    home_folder_id?: string | null;
    is_disabled?: boolean;
    last_name?: string | null;
    locale?: string | null;
    models_dir_validated?: boolean | null;
    ui_state?: IDictionary<string> | null;
}
export interface IWriteUserAttribute {
    name?: string | null;
    label?: string | null;
    type?: string | null;
    default_value?: string | null;
    value_is_hidden?: boolean;
    user_can_view?: boolean;
    user_can_edit?: boolean;
    hidden_value_domain_whitelist?: string;
}
export interface IWriteUserAttributeWithValue {
    value?: string | null;
}
export interface IWriteWhitelabelConfiguration {
    logo_file?: string | null;
    favicon_file?: string | null;
    default_title?: string | null;
    show_help_menu?: boolean;
    show_docs?: boolean;
    show_email_sub_options?: boolean;
    allow_looker_mentions?: boolean;
    allow_looker_links?: boolean;
    custom_welcome_email_advanced?: boolean;
    setup_mentions?: boolean;
    alerts_logo?: boolean;
    alerts_links?: boolean;
    folders_mentions?: boolean;
}
