import type { DelimArray, IDictionary, IAPIMethods, IAuthSession, ITransportSettings, SDKResponse } from '@looker/sdk-rtl';
import type { IAccessToken, IAlert, IAlertNotifications, IAlertPatch, IApiSession, IApiVersion, IArtifact, IArtifactNamespace, IArtifactUsage, IBackupConfiguration, IBoard, IBoardItem, IBoardSection, IColorCollection, IColumnSearch, IConnectionFeatures, IContentFavorite, IContentMeta, IContentMetaGroupUser, IContentSearch, IContentValidation, IContentView, ICostEstimate, ICreateCostEstimate, ICreateCredentialsApi3, ICreateEmbedUserRequest, ICreateFolder, ICreateOAuthApplicationUserStateRequest, ICreateOAuthApplicationUserStateResponse, ICredentialsApi3, ICredentialsEmail, ICredentialsEmailSearch, ICredentialsEmbed, ICredentialsGoogle, ICredentialsLDAP, ICredentialsLookerOpenid, ICredentialsOIDC, ICredentialsSaml, ICredentialsTotp, ICustomWelcomeEmail, IDashboard, IDashboardAggregateTableLookml, IDashboardBase, IDashboardElement, IDashboardFilter, IDashboardLayout, IDashboardLayoutComponent, IDashboardLookml, IDataActionForm, IDataActionRequest, IDataActionResponse, IDatagroup, IDBConnection, IDBConnectionTestResult, IDependencyGraph, IDialectInfo, IDigestEmails, IDigestEmailSend, IEgressIpAddresses, IEmbedCookielessSessionAcquire, IEmbedCookielessSessionAcquireResponse, IEmbedCookielessSessionGenerateTokens, IEmbedCookielessSessionGenerateTokensResponse, IEmbedParams, IEmbedSecret, IEmbedSsoParams, IEmbedUrlResponse, IError, IExternalOauthApplication, IFolder, IGitBranch, IGitConnectionTest, IGitConnectionTestResult, IGroup, IGroupHierarchy, IGroupIdForGroupInclusion, IGroupIdForGroupUserInclusion, IGroupSearch, IHomepageSection, IIntegration, IIntegrationHub, IIntegrationTestResult, IInternalHelpResources, IInternalHelpResourcesContent, IJdbcInterface, ILDAPConfig, ILDAPConfigTestResult, ILegacyFeature, ILocale, ILook, ILookmlModel, ILookmlModelExplore, ILookmlTest, ILookmlTestResult, ILookWithQuery, IManifest, IMaterializePDT, IMergeQuery, IMobileSettings, IMobileToken, IModel, IModelFieldSuggestions, IModelSet, IOauthClientApp, IOIDCConfig, IPasswordConfig, IPermission, IPermissionSet, IProject, IProjectFile, IProjectValidation, IProjectValidationCache, IProjectWorkspace, IQuery, IQueryTask, IRenderTask, IRepositoryCredential, IRequestActiveThemes, IRequestAlertNotifications, IRequestAllBoardItems, IRequestAllBoardSections, IRequestAllExternalOauthApplications, IRequestAllGroups, IRequestAllGroupUsers, IRequestAllIntegrations, IRequestAllLookmlModels, IRequestAllRoles, IRequestAllScheduledPlans, IRequestAllUserAttributes, IRequestAllUsers, IRequestArtifact, IRequestArtifactNamespaces, IRequestConnectionColumns, IRequestConnectionSchemas, IRequestConnectionSearchColumns, IRequestConnectionTables, IRequestContentThumbnail, IRequestCreateDashboardElement, IRequestCreateDashboardRenderTask, IRequestCreateQueryTask, IRequestCreateUserCredentialsEmailPasswordReset, IRequestDeployRefToProduction, IRequestFolderChildren, IRequestFolderChildrenSearch, IRequestGraphDerivedTablesForModel, IRequestGraphDerivedTablesForView, IRequestLogin, IRequestModelFieldnameSuggestions, IRequestRoleUsers, IRequestRunGitConnectionTest, IRequestRunInlineQuery, IRequestRunLook, IRequestRunLookmlTest, IRequestRunQuery, IRequestScheduledPlansForDashboard, IRequestScheduledPlansForLook, IRequestScheduledPlansForLookmlDashboard, IRequestSearchAlerts, IRequestSearchArtifacts, IRequestSearchBoards, IRequestSearchContent, IRequestSearchContentFavorites, IRequestSearchContentViews, IRequestSearchCredentialsEmail, IRequestSearchDashboardElements, IRequestSearchDashboards, IRequestSearchFolders, IRequestSearchGroups, IRequestSearchGroupsWithHierarchy, IRequestSearchGroupsWithRoles, IRequestSearchLooks, IRequestSearchModelSets, IRequestSearchPermissionSets, IRequestSearchRoles, IRequestSearchRolesWithUserCount, IRequestSearchThemes, IRequestSearchUserLoginLockouts, IRequestSearchUsers, IRequestSearchUsersNames, IRequestStartPdtBuild, IRequestTagRef, IRequestUserAttributeUserValues, IRequestUserRoles, IRole, IRoleSearch, IRunningQueries, ISamlConfig, ISamlMetadataParseResult, IScheduledPlan, ISchema, ISchemaColumns, ISchemaTables, ISession, ISessionConfig, ISetting, ISmtpSettings, ISmtpStatus, ISqlInterfaceQuery, ISqlQuery, ISqlQueryCreate, ISshPublicKey, ISshServer, ISshTunnel, ISupportAccessAddEntries, ISupportAccessAllowlistEntry, ISupportAccessEnable, ISupportAccessStatus, ITheme, ITimezone, IUpdateArtifact, IUpdateFolder, IUser, IUserAttribute, IUserAttributeGroupValue, IUserAttributeWithValue, IUserEmailOnly, IUserLoginLockout, IUserPublic, IValidationError, IWelcomeEmailTest, IWhitelabelConfiguration, IWorkspace, IWriteAlert, IWriteApiSession, IWriteBackupConfiguration, IWriteBoard, IWriteBoardItem, IWriteBoardSection, IWriteColorCollection, IWriteContentFavorite, IWriteContentMeta, IWriteCreateDashboardFilter, IWriteCredentialsEmail, IWriteDashboard, IWriteDashboardElement, IWriteDashboardFilter, IWriteDashboardLayout, IWriteDashboardLayoutComponent, IWriteDashboardLookml, IWriteDatagroup, IWriteDBConnection, IWriteEmbedSecret, IWriteExternalOauthApplication, IWriteGitBranch, IWriteGroup, IWriteIntegration, IWriteIntegrationHub, IWriteInternalHelpResources, IWriteInternalHelpResourcesContent, IWriteLDAPConfig, IWriteLegacyFeature, IWriteLookmlModel, IWriteLookWithQuery, IWriteMergeQuery, IWriteMobileToken, IWriteModelSet, IWriteOauthClientApp, IWriteOIDCConfig, IWritePasswordConfig, IWritePermissionSet, IWriteProject, IWriteQuery, IWriteRepositoryCredential, IWriteRole, IWriteSamlConfig, IWriteScheduledPlan, IWriteSessionConfig, IWriteSetting, IWriteSqlInterfaceQueryCreate, IWriteSshServer, IWriteSshTunnel, IWriteTheme, IWriteUser, IWriteUserAttribute, IWriteUserAttributeWithValue, IWriteWhitelabelConfiguration } from './models';
export declare const functionalSdk40: (authSession: IAuthSession) => import("@looker/sdk-rtl").APIMethods;
export declare const follow_alert: (sdk: IAPIMethods, alert_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<void, IError>>;
export declare const unfollow_alert: (sdk: IAPIMethods, alert_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<void, IError>>;
export declare const search_alerts: (sdk: IAPIMethods, request: IRequestSearchAlerts, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IAlert[], IError>>;
export declare const get_alert: (sdk: IAPIMethods, alert_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IAlert, IError>>;
export declare const update_alert: (sdk: IAPIMethods, alert_id: string, body: Partial<IWriteAlert>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IAlert, IError | IValidationError>>;
export declare const update_alert_field: (sdk: IAPIMethods, alert_id: string, body: Partial<IAlertPatch>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IAlert, IError | IValidationError>>;
export declare const delete_alert: (sdk: IAPIMethods, alert_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<void, IError>>;
export declare const create_alert: (sdk: IAPIMethods, body: Partial<IWriteAlert>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IAlert, IError | IValidationError>>;
export declare const enqueue_alert: (sdk: IAPIMethods, alert_id: string, force?: boolean | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<void, IError>>;
export declare const alert_notifications: (sdk: IAPIMethods, request: IRequestAlertNotifications, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IAlertNotifications[], IError>>;
export declare const read_alert_notification: (sdk: IAPIMethods, alert_notification_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IAlertNotifications, IError | IValidationError>>;
export declare const login: (sdk: IAPIMethods, request: IRequestLogin, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IAccessToken, IError>>;
export declare const login_user: (sdk: IAPIMethods, user_id: string, associative?: boolean | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IAccessToken, IError>>;
export declare const logout: (sdk: IAPIMethods, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError>>;
export declare const artifact_usage: (sdk: IAPIMethods, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IArtifactUsage, IError | IValidationError>>;
export declare const artifact_namespaces: (sdk: IAPIMethods, request: IRequestArtifactNamespaces, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IArtifactNamespace[], IError | IValidationError>>;
export declare const artifact_value: (sdk: IAPIMethods, namespace: string, key?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError | IValidationError>>;
export declare const purge_artifacts: (sdk: IAPIMethods, namespace: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<void, IError>>;
export declare const search_artifacts: (sdk: IAPIMethods, request: IRequestSearchArtifacts, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IArtifact[], IError | IValidationError>>;
export declare const artifact: (sdk: IAPIMethods, request: IRequestArtifact, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IArtifact[], IError | IValidationError>>;
export declare const delete_artifact: (sdk: IAPIMethods, namespace: string, key: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<void, IError>>;
export declare const update_artifacts: (sdk: IAPIMethods, namespace: string, body: Partial<IUpdateArtifact[]>, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IArtifact[], IError | IValidationError>>;
export declare const create_embed_secret: (sdk: IAPIMethods, body?: Partial<IWriteEmbedSecret> | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IEmbedSecret, IError | IValidationError>>;
export declare const delete_embed_secret: (sdk: IAPIMethods, embed_secret_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError>>;
export declare const create_sso_embed_url: (sdk: IAPIMethods, body: Partial<IEmbedSsoParams>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IEmbedUrlResponse, IError | IValidationError>>;
export declare const create_embed_url_as_me: (sdk: IAPIMethods, body: Partial<IEmbedParams>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IEmbedUrlResponse, IError | IValidationError>>;
export declare const validate_embed_url: (sdk: IAPIMethods, url?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IEmbedUrlResponse, IError | IValidationError>>;
export declare const acquire_embed_cookieless_session: (sdk: IAPIMethods, body: Partial<IEmbedCookielessSessionAcquire>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IEmbedCookielessSessionAcquireResponse, IError | IValidationError>>;
export declare const delete_embed_cookieless_session: (sdk: IAPIMethods, session_reference_token: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError | IValidationError>>;
export declare const generate_tokens_for_cookieless_session: (sdk: IAPIMethods, body: Partial<IEmbedCookielessSessionGenerateTokens>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IEmbedCookielessSessionGenerateTokensResponse, IError | IValidationError>>;
export declare const ldap_config: (sdk: IAPIMethods, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ILDAPConfig, IError>>;
export declare const update_ldap_config: (sdk: IAPIMethods, body: Partial<IWriteLDAPConfig>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ILDAPConfig, IError | IValidationError>>;
export declare const test_ldap_config_connection: (sdk: IAPIMethods, body: Partial<IWriteLDAPConfig>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ILDAPConfigTestResult, IError | IValidationError>>;
export declare const test_ldap_config_auth: (sdk: IAPIMethods, body: Partial<IWriteLDAPConfig>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ILDAPConfigTestResult, IError | IValidationError>>;
export declare const test_ldap_config_user_info: (sdk: IAPIMethods, body: Partial<IWriteLDAPConfig>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ILDAPConfigTestResult, IError | IValidationError>>;
export declare const test_ldap_config_user_auth: (sdk: IAPIMethods, body: Partial<IWriteLDAPConfig>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ILDAPConfigTestResult, IError | IValidationError>>;
export declare const register_mobile_device: (sdk: IAPIMethods, body: Partial<IWriteMobileToken>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IMobileToken, IError | IValidationError>>;
export declare const update_mobile_device_registration: (sdk: IAPIMethods, device_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IMobileToken, IError | IValidationError>>;
export declare const deregister_mobile_device: (sdk: IAPIMethods, device_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<void, IError>>;
export declare const all_oauth_client_apps: (sdk: IAPIMethods, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IOauthClientApp[], IError>>;
export declare const oauth_client_app: (sdk: IAPIMethods, client_guid: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IOauthClientApp, IError>>;
export declare const register_oauth_client_app: (sdk: IAPIMethods, client_guid: string, body: Partial<IWriteOauthClientApp>, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IOauthClientApp, IError | IValidationError>>;
export declare const update_oauth_client_app: (sdk: IAPIMethods, client_guid: string, body: Partial<IWriteOauthClientApp>, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IOauthClientApp, IError | IValidationError>>;
export declare const delete_oauth_client_app: (sdk: IAPIMethods, client_guid: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError>>;
export declare const invalidate_tokens: (sdk: IAPIMethods, client_guid: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError>>;
export declare const activate_app_user: (sdk: IAPIMethods, client_guid: string, user_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError | IValidationError>>;
export declare const deactivate_app_user: (sdk: IAPIMethods, client_guid: string, user_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError>>;
export declare const oidc_config: (sdk: IAPIMethods, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IOIDCConfig, IError>>;
export declare const update_oidc_config: (sdk: IAPIMethods, body: Partial<IWriteOIDCConfig>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IOIDCConfig, IError | IValidationError>>;
export declare const oidc_test_config: (sdk: IAPIMethods, test_slug: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IOIDCConfig, IError>>;
export declare const delete_oidc_test_config: (sdk: IAPIMethods, test_slug: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError>>;
export declare const create_oidc_test_config: (sdk: IAPIMethods, body: Partial<IWriteOIDCConfig>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IOIDCConfig, IError | IValidationError>>;
export declare const password_config: (sdk: IAPIMethods, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IPasswordConfig, IError>>;
export declare const update_password_config: (sdk: IAPIMethods, body: Partial<IWritePasswordConfig>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IPasswordConfig, IError | IValidationError>>;
export declare const force_password_reset_at_next_login_for_all_users: (sdk: IAPIMethods, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError | IValidationError>>;
export declare const saml_config: (sdk: IAPIMethods, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ISamlConfig, IError>>;
export declare const update_saml_config: (sdk: IAPIMethods, body: Partial<IWriteSamlConfig>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ISamlConfig, IError | IValidationError>>;
export declare const saml_test_config: (sdk: IAPIMethods, test_slug: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ISamlConfig, IError>>;
export declare const delete_saml_test_config: (sdk: IAPIMethods, test_slug: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError>>;
export declare const create_saml_test_config: (sdk: IAPIMethods, body: Partial<IWriteSamlConfig>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ISamlConfig, IError | IValidationError>>;
export declare const parse_saml_idp_metadata: (sdk: IAPIMethods, body: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ISamlMetadataParseResult, IError>>;
export declare const fetch_and_parse_saml_idp_metadata: (sdk: IAPIMethods, body: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ISamlMetadataParseResult, IError>>;
export declare const session_config: (sdk: IAPIMethods, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ISessionConfig, IError>>;
export declare const update_session_config: (sdk: IAPIMethods, body: Partial<IWriteSessionConfig>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ISessionConfig, IError | IValidationError>>;
export declare const get_support_access_allowlist_entries: (sdk: IAPIMethods, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ISupportAccessAllowlistEntry[], IError>>;
export declare const add_support_access_allowlist_entries: (sdk: IAPIMethods, body: Partial<ISupportAccessAddEntries>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ISupportAccessAllowlistEntry[], IError | IValidationError>>;
export declare const delete_support_access_allowlist_entry: (sdk: IAPIMethods, entry_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError>>;
export declare const enable_support_access: (sdk: IAPIMethods, body: Partial<ISupportAccessEnable>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ISupportAccessStatus, IError | IValidationError>>;
export declare const disable_support_access: (sdk: IAPIMethods, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ISupportAccessStatus, IError>>;
export declare const support_access_status: (sdk: IAPIMethods, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ISupportAccessStatus, IError>>;
export declare const all_user_login_lockouts: (sdk: IAPIMethods, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IUserLoginLockout[], IError>>;
export declare const search_user_login_lockouts: (sdk: IAPIMethods, request: IRequestSearchUserLoginLockouts, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IUserLoginLockout[], IError>>;
export declare const delete_user_login_lockout: (sdk: IAPIMethods, key: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError>>;
export declare const all_boards: (sdk: IAPIMethods, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IBoard[], IError>>;
export declare const create_board: (sdk: IAPIMethods, body: Partial<IWriteBoard>, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IBoard, IError | IValidationError>>;
export declare const search_boards: (sdk: IAPIMethods, request: IRequestSearchBoards, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IBoard[], IError>>;
export declare const board: (sdk: IAPIMethods, board_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IBoard, IError>>;
export declare const update_board: (sdk: IAPIMethods, board_id: string, body: Partial<IWriteBoard>, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IBoard, IError | IValidationError>>;
export declare const delete_board: (sdk: IAPIMethods, board_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError>>;
export declare const all_board_items: (sdk: IAPIMethods, request: IRequestAllBoardItems, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IBoardItem[], IError>>;
export declare const create_board_item: (sdk: IAPIMethods, body: Partial<IWriteBoardItem>, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IBoardItem, IError | IValidationError>>;
export declare const board_item: (sdk: IAPIMethods, board_item_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IBoardItem, IError>>;
export declare const update_board_item: (sdk: IAPIMethods, board_item_id: string, body: Partial<IWriteBoardItem>, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IBoardItem, IError | IValidationError>>;
export declare const delete_board_item: (sdk: IAPIMethods, board_item_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError>>;
export declare const all_board_sections: (sdk: IAPIMethods, request: IRequestAllBoardSections, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IBoardSection[], IError>>;
export declare const create_board_section: (sdk: IAPIMethods, body: Partial<IWriteBoardSection>, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IBoardSection, IError | IValidationError>>;
export declare const board_section: (sdk: IAPIMethods, board_section_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IBoardSection, IError>>;
export declare const update_board_section: (sdk: IAPIMethods, board_section_id: string, body: Partial<IWriteBoardSection>, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IBoardSection, IError | IValidationError>>;
export declare const delete_board_section: (sdk: IAPIMethods, board_section_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError>>;
export declare const all_color_collections: (sdk: IAPIMethods, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IColorCollection[], IError>>;
export declare const create_color_collection: (sdk: IAPIMethods, body: Partial<IWriteColorCollection>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IColorCollection, IError | IValidationError>>;
export declare const color_collections_custom: (sdk: IAPIMethods, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IColorCollection[], IError>>;
export declare const color_collections_standard: (sdk: IAPIMethods, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IColorCollection[], IError>>;
export declare const default_color_collection: (sdk: IAPIMethods, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IColorCollection, IError>>;
export declare const set_default_color_collection: (sdk: IAPIMethods, collection_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IColorCollection, IError | IValidationError>>;
export declare const color_collection: (sdk: IAPIMethods, collection_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IColorCollection, IError>>;
export declare const update_color_collection: (sdk: IAPIMethods, collection_id: string, body: Partial<IWriteColorCollection>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IColorCollection, IError | IValidationError>>;
export declare const delete_color_collection: (sdk: IAPIMethods, collection_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError>>;
export declare const cloud_storage_configuration: (sdk: IAPIMethods, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IBackupConfiguration, IError>>;
export declare const update_cloud_storage_configuration: (sdk: IAPIMethods, body: Partial<IWriteBackupConfiguration>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IBackupConfiguration, IError | IValidationError>>;
export declare const custom_welcome_email: (sdk: IAPIMethods, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ICustomWelcomeEmail, IError>>;
export declare const update_custom_welcome_email: (sdk: IAPIMethods, body: Partial<ICustomWelcomeEmail>, send_test_welcome_email?: boolean | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ICustomWelcomeEmail, IError | IValidationError>>;
export declare const update_custom_welcome_email_test: (sdk: IAPIMethods, body: Partial<IWelcomeEmailTest>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IWelcomeEmailTest, IError | IValidationError>>;
export declare const digest_emails_enabled: (sdk: IAPIMethods, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IDigestEmails, IError>>;
export declare const update_digest_emails_enabled: (sdk: IAPIMethods, body: Partial<IDigestEmails>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IDigestEmails, IError | IValidationError>>;
export declare const create_digest_email_send: (sdk: IAPIMethods, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IDigestEmailSend, IError>>;
export declare const public_egress_ip_addresses: (sdk: IAPIMethods, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IEgressIpAddresses, IError>>;
export declare const internal_help_resources_content: (sdk: IAPIMethods, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IInternalHelpResourcesContent, IError>>;
export declare const update_internal_help_resources_content: (sdk: IAPIMethods, body: Partial<IWriteInternalHelpResourcesContent>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IInternalHelpResourcesContent, IError | IValidationError>>;
export declare const internal_help_resources: (sdk: IAPIMethods, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IInternalHelpResources, IError>>;
export declare const update_internal_help_resources: (sdk: IAPIMethods, body: Partial<IWriteInternalHelpResources>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IInternalHelpResources, IError | IValidationError>>;
export declare const all_legacy_features: (sdk: IAPIMethods, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ILegacyFeature[], IError>>;
export declare const legacy_feature: (sdk: IAPIMethods, legacy_feature_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ILegacyFeature, IError>>;
export declare const update_legacy_feature: (sdk: IAPIMethods, legacy_feature_id: string, body: Partial<IWriteLegacyFeature>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ILegacyFeature, IError | IValidationError>>;
export declare const all_locales: (sdk: IAPIMethods, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ILocale[], IError>>;
export declare const mobile_settings: (sdk: IAPIMethods, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IMobileSettings, IError>>;
export declare const get_setting: (sdk: IAPIMethods, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ISetting, IError | IValidationError>>;
export declare const set_setting: (sdk: IAPIMethods, body: Partial<IWriteSetting>, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ISetting, IError | IValidationError>>;
export declare const set_smtp_settings: (sdk: IAPIMethods, body: Partial<ISmtpSettings>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<void, IError | IValidationError>>;
export declare const smtp_status: (sdk: IAPIMethods, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ISmtpStatus, IError>>;
export declare const all_timezones: (sdk: IAPIMethods, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ITimezone[], IError>>;
export declare const versions: (sdk: IAPIMethods, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IApiVersion, IError>>;
export declare const api_spec: (sdk: IAPIMethods, api_version: string, specification: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<any, IError>>;
export declare const whitelabel_configuration: (sdk: IAPIMethods, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IWhitelabelConfiguration, IError>>;
export declare const update_whitelabel_configuration: (sdk: IAPIMethods, body: Partial<IWriteWhitelabelConfiguration>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IWhitelabelConfiguration, IError | IValidationError>>;
export declare const all_connections: (sdk: IAPIMethods, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IDBConnection[], IError>>;
export declare const create_connection: (sdk: IAPIMethods, body: Partial<IWriteDBConnection>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IDBConnection, IError | IValidationError>>;
export declare const connection: (sdk: IAPIMethods, connection_name: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IDBConnection, IError>>;
export declare const update_connection: (sdk: IAPIMethods, connection_name: string, body: Partial<IWriteDBConnection>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IDBConnection, IError | IValidationError>>;
export declare const delete_connection: (sdk: IAPIMethods, connection_name: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError>>;
export declare const delete_connection_override: (sdk: IAPIMethods, connection_name: string, override_context: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError | IValidationError>>;
export declare const test_connection: (sdk: IAPIMethods, connection_name: string, tests?: DelimArray<string> | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IDBConnectionTestResult[], IError | IValidationError>>;
export declare const test_connection_config: (sdk: IAPIMethods, body: Partial<IWriteDBConnection>, tests?: DelimArray<string> | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IDBConnectionTestResult[], IError>>;
export declare const all_dialect_infos: (sdk: IAPIMethods, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IDialectInfo[], IError>>;
export declare const all_external_oauth_applications: (sdk: IAPIMethods, request: IRequestAllExternalOauthApplications, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IExternalOauthApplication[], IError>>;
export declare const create_external_oauth_application: (sdk: IAPIMethods, body: Partial<IWriteExternalOauthApplication>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IExternalOauthApplication, IError | IValidationError>>;
export declare const create_oauth_application_user_state: (sdk: IAPIMethods, body: Partial<ICreateOAuthApplicationUserStateRequest>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ICreateOAuthApplicationUserStateResponse, IError | IValidationError>>;
export declare const all_ssh_servers: (sdk: IAPIMethods, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ISshServer[], IError>>;
export declare const create_ssh_server: (sdk: IAPIMethods, body: Partial<IWriteSshServer>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ISshServer, IError | IValidationError>>;
export declare const ssh_server: (sdk: IAPIMethods, ssh_server_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ISshServer, IError>>;
export declare const update_ssh_server: (sdk: IAPIMethods, ssh_server_id: string, body: Partial<IWriteSshServer>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ISshServer, IError | IValidationError>>;
export declare const delete_ssh_server: (sdk: IAPIMethods, ssh_server_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError>>;
export declare const test_ssh_server: (sdk: IAPIMethods, ssh_server_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ISshServer, IError>>;
export declare const all_ssh_tunnels: (sdk: IAPIMethods, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ISshTunnel[], IError>>;
export declare const create_ssh_tunnel: (sdk: IAPIMethods, body: Partial<IWriteSshTunnel>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ISshTunnel, IError | IValidationError>>;
export declare const ssh_tunnel: (sdk: IAPIMethods, ssh_tunnel_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ISshTunnel, IError>>;
export declare const update_ssh_tunnel: (sdk: IAPIMethods, ssh_tunnel_id: string, body: Partial<IWriteSshTunnel>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ISshTunnel, IError | IValidationError>>;
export declare const delete_ssh_tunnel: (sdk: IAPIMethods, ssh_tunnel_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError>>;
export declare const test_ssh_tunnel: (sdk: IAPIMethods, ssh_tunnel_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ISshTunnel, IError>>;
export declare const ssh_public_key: (sdk: IAPIMethods, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ISshPublicKey, IError>>;
export declare const search_content_favorites: (sdk: IAPIMethods, request: IRequestSearchContentFavorites, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IContentFavorite[], IError>>;
export declare const content_favorite: (sdk: IAPIMethods, content_favorite_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IContentFavorite, IError>>;
export declare const delete_content_favorite: (sdk: IAPIMethods, content_favorite_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError>>;
export declare const create_content_favorite: (sdk: IAPIMethods, body: Partial<IWriteContentFavorite>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IContentFavorite, IError | IValidationError>>;
export declare const all_content_metadatas: (sdk: IAPIMethods, parent_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IContentMeta[], IError>>;
export declare const content_metadata: (sdk: IAPIMethods, content_metadata_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IContentMeta, IError>>;
export declare const update_content_metadata: (sdk: IAPIMethods, content_metadata_id: string, body: Partial<IWriteContentMeta>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IContentMeta, IError | IValidationError>>;
export declare const all_content_metadata_accesses: (sdk: IAPIMethods, content_metadata_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IContentMetaGroupUser[], IError>>;
export declare const create_content_metadata_access: (sdk: IAPIMethods, body: Partial<IContentMetaGroupUser>, send_boards_notification_email?: boolean | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IContentMetaGroupUser, IError | IValidationError>>;
export declare const update_content_metadata_access: (sdk: IAPIMethods, content_metadata_access_id: string, body: Partial<IContentMetaGroupUser>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IContentMetaGroupUser, IError | IValidationError>>;
export declare const delete_content_metadata_access: (sdk: IAPIMethods, content_metadata_access_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError>>;
export declare const search_content: (sdk: IAPIMethods, request: IRequestSearchContent, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IContentSearch[], IError>>;
export declare const content_thumbnail: (sdk: IAPIMethods, request: IRequestContentThumbnail, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError | IValidationError>>;
export declare const content_validation: (sdk: IAPIMethods, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IContentValidation, IError | IValidationError>>;
export declare const search_content_views: (sdk: IAPIMethods, request: IRequestSearchContentViews, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IContentView[], IError>>;
export declare const vector_thumbnail: (sdk: IAPIMethods, type: string, resource_id: string, reload?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError>>;
export declare const all_dashboards: (sdk: IAPIMethods, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IDashboardBase[], IError>>;
export declare const create_dashboard: (sdk: IAPIMethods, body: Partial<IWriteDashboard>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IDashboard, IError | IValidationError>>;
export declare const search_dashboards: (sdk: IAPIMethods, request: IRequestSearchDashboards, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IDashboard[], IError>>;
export declare const import_lookml_dashboard: (sdk: IAPIMethods, lookml_dashboard_id: string, space_id: string, body?: Partial<IWriteDashboard> | undefined, raw_locale?: boolean | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IDashboard, IError | IValidationError>>;
export declare const sync_lookml_dashboard: (sdk: IAPIMethods, lookml_dashboard_id: string, body: Partial<IWriteDashboard>, raw_locale?: boolean | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<number[], IError | IValidationError>>;
export declare const dashboard: (sdk: IAPIMethods, dashboard_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IDashboard, IError>>;
export declare const update_dashboard: (sdk: IAPIMethods, dashboard_id: string, body: Partial<IWriteDashboard>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IDashboard, IError | IValidationError>>;
export declare const delete_dashboard: (sdk: IAPIMethods, dashboard_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError>>;
export declare const dashboard_aggregate_table_lookml: (sdk: IAPIMethods, dashboard_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IDashboardAggregateTableLookml, IError>>;
export declare const dashboard_lookml: (sdk: IAPIMethods, dashboard_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IDashboardLookml, IError>>;
export declare const move_dashboard: (sdk: IAPIMethods, dashboard_id: string, folder_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IDashboard, IError | IValidationError>>;
export declare const import_dashboard_from_lookml: (sdk: IAPIMethods, body: Partial<IWriteDashboardLookml>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IDashboard, IError | IValidationError>>;
export declare const create_dashboard_from_lookml: (sdk: IAPIMethods, body: Partial<IWriteDashboardLookml>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IDashboard, IError | IValidationError>>;
export declare const copy_dashboard: (sdk: IAPIMethods, dashboard_id: string, folder_id?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IDashboard, IError | IValidationError>>;
export declare const search_dashboard_elements: (sdk: IAPIMethods, request: IRequestSearchDashboardElements, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IDashboardElement[], IError>>;
export declare const dashboard_element: (sdk: IAPIMethods, dashboard_element_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IDashboardElement, IError>>;
export declare const update_dashboard_element: (sdk: IAPIMethods, dashboard_element_id: string, body: Partial<IWriteDashboardElement>, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IDashboardElement, IError | IValidationError>>;
export declare const delete_dashboard_element: (sdk: IAPIMethods, dashboard_element_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError>>;
export declare const dashboard_dashboard_elements: (sdk: IAPIMethods, dashboard_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IDashboardElement[], IError>>;
export declare const create_dashboard_element: (sdk: IAPIMethods, request: IRequestCreateDashboardElement, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IDashboardElement, IError | IValidationError>>;
export declare const dashboard_filter: (sdk: IAPIMethods, dashboard_filter_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IDashboardFilter, IError>>;
export declare const update_dashboard_filter: (sdk: IAPIMethods, dashboard_filter_id: string, body: Partial<IWriteDashboardFilter>, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IDashboardFilter, IError | IValidationError>>;
export declare const delete_dashboard_filter: (sdk: IAPIMethods, dashboard_filter_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError>>;
export declare const dashboard_dashboard_filters: (sdk: IAPIMethods, dashboard_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IDashboardFilter[], IError>>;
export declare const create_dashboard_filter: (sdk: IAPIMethods, body: Partial<IWriteCreateDashboardFilter>, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IDashboardFilter, IError | IValidationError>>;
export declare const dashboard_layout_component: (sdk: IAPIMethods, dashboard_layout_component_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IDashboardLayoutComponent, IError>>;
export declare const update_dashboard_layout_component: (sdk: IAPIMethods, dashboard_layout_component_id: string, body: Partial<IWriteDashboardLayoutComponent>, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IDashboardLayoutComponent, IError | IValidationError>>;
export declare const dashboard_layout_dashboard_layout_components: (sdk: IAPIMethods, dashboard_layout_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IDashboardLayoutComponent[], IError>>;
export declare const dashboard_layout: (sdk: IAPIMethods, dashboard_layout_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IDashboardLayout, IError>>;
export declare const update_dashboard_layout: (sdk: IAPIMethods, dashboard_layout_id: string, body: Partial<IWriteDashboardLayout>, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IDashboardLayout, IError | IValidationError>>;
export declare const delete_dashboard_layout: (sdk: IAPIMethods, dashboard_layout_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError | IValidationError>>;
export declare const dashboard_dashboard_layouts: (sdk: IAPIMethods, dashboard_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IDashboardLayout[], IError>>;
export declare const create_dashboard_layout: (sdk: IAPIMethods, body: Partial<IWriteDashboardLayout>, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IDashboardLayout, IError | IValidationError>>;
export declare const perform_data_action: (sdk: IAPIMethods, body: Partial<IDataActionRequest>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IDataActionResponse, IError>>;
export declare const fetch_remote_data_action_form: (sdk: IAPIMethods, body: Partial<IDictionary<string>>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IDataActionForm, IError | IValidationError>>;
export declare const all_datagroups: (sdk: IAPIMethods, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IDatagroup[], IError>>;
export declare const datagroup: (sdk: IAPIMethods, datagroup_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IDatagroup, IError>>;
export declare const update_datagroup: (sdk: IAPIMethods, datagroup_id: string, body: Partial<IWriteDatagroup>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IDatagroup, IError | IValidationError>>;
export declare const graph_derived_tables_for_model: (sdk: IAPIMethods, request: IRequestGraphDerivedTablesForModel, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IDependencyGraph, IError>>;
export declare const graph_derived_tables_for_view: (sdk: IAPIMethods, request: IRequestGraphDerivedTablesForView, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IDependencyGraph, IError>>;
export declare const start_pdt_build: (sdk: IAPIMethods, request: IRequestStartPdtBuild, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IMaterializePDT, IError>>;
export declare const check_pdt_build: (sdk: IAPIMethods, materialization_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IMaterializePDT, IError>>;
export declare const stop_pdt_build: (sdk: IAPIMethods, materialization_id: string, source?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IMaterializePDT, IError>>;
export declare const search_folders: (sdk: IAPIMethods, request: IRequestSearchFolders, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IFolder[], IError>>;
export declare const folder: (sdk: IAPIMethods, folder_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IFolder, IError>>;
export declare const update_folder: (sdk: IAPIMethods, folder_id: string, body: Partial<IUpdateFolder>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IFolder, IError | IValidationError>>;
export declare const delete_folder: (sdk: IAPIMethods, folder_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError>>;
export declare const all_folders: (sdk: IAPIMethods, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IFolder[], IError>>;
export declare const create_folder: (sdk: IAPIMethods, body: Partial<ICreateFolder>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IFolder, IError | IValidationError>>;
export declare const folder_children: (sdk: IAPIMethods, request: IRequestFolderChildren, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IFolder[], IError>>;
export declare const folder_children_search: (sdk: IAPIMethods, request: IRequestFolderChildrenSearch, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IFolder[], IError>>;
export declare const folder_parent: (sdk: IAPIMethods, folder_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IFolder, IError>>;
export declare const folder_ancestors: (sdk: IAPIMethods, folder_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IFolder[], IError>>;
export declare const folder_looks: (sdk: IAPIMethods, folder_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ILookWithQuery[], IError>>;
export declare const folder_dashboards: (sdk: IAPIMethods, folder_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IDashboard[], IError>>;
export declare const all_groups: (sdk: IAPIMethods, request: IRequestAllGroups, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IGroup[], IError>>;
export declare const create_group: (sdk: IAPIMethods, body: Partial<IWriteGroup>, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IGroup, IError | IValidationError>>;
export declare const search_groups: (sdk: IAPIMethods, request: IRequestSearchGroups, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IGroup[], IError>>;
export declare const search_groups_with_roles: (sdk: IAPIMethods, request: IRequestSearchGroupsWithRoles, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IGroupSearch[], IError>>;
export declare const search_groups_with_hierarchy: (sdk: IAPIMethods, request: IRequestSearchGroupsWithHierarchy, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IGroupHierarchy[], IError>>;
export declare const group: (sdk: IAPIMethods, group_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IGroup, IError>>;
export declare const update_group: (sdk: IAPIMethods, group_id: string, body: Partial<IWriteGroup>, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IGroup, IError | IValidationError>>;
export declare const delete_group: (sdk: IAPIMethods, group_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError>>;
export declare const all_group_groups: (sdk: IAPIMethods, group_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IGroup[], IError>>;
export declare const add_group_group: (sdk: IAPIMethods, group_id: string, body: Partial<IGroupIdForGroupInclusion>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IGroup, IError>>;
export declare const all_group_users: (sdk: IAPIMethods, request: IRequestAllGroupUsers, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IUser[], IError>>;
export declare const add_group_user: (sdk: IAPIMethods, group_id: string, body: Partial<IGroupIdForGroupUserInclusion>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IUser, IError>>;
export declare const delete_group_user: (sdk: IAPIMethods, group_id: string, user_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<void, IError>>;
export declare const delete_group_from_group: (sdk: IAPIMethods, group_id: string, deleting_group_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<void, IError>>;
export declare const update_user_attribute_group_value: (sdk: IAPIMethods, group_id: string, user_attribute_id: string, body: Partial<IUserAttributeGroupValue>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IUserAttributeGroupValue, IError | IValidationError>>;
export declare const delete_user_attribute_group_value: (sdk: IAPIMethods, group_id: string, user_attribute_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<void, IError>>;
export declare const all_primary_homepage_sections: (sdk: IAPIMethods, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IHomepageSection[], IError>>;
export declare const all_integration_hubs: (sdk: IAPIMethods, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IIntegrationHub[], IError>>;
export declare const create_integration_hub: (sdk: IAPIMethods, body: Partial<IWriteIntegrationHub>, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IIntegrationHub, IError | IValidationError>>;
export declare const integration_hub: (sdk: IAPIMethods, integration_hub_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IIntegrationHub, IError>>;
export declare const update_integration_hub: (sdk: IAPIMethods, integration_hub_id: string, body: Partial<IWriteIntegrationHub>, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IIntegrationHub, IError | IValidationError>>;
export declare const delete_integration_hub: (sdk: IAPIMethods, integration_hub_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError>>;
export declare const accept_integration_hub_legal_agreement: (sdk: IAPIMethods, integration_hub_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IIntegrationHub, IError | IValidationError>>;
export declare const all_integrations: (sdk: IAPIMethods, request: IRequestAllIntegrations, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IIntegration[], IError>>;
export declare const integration: (sdk: IAPIMethods, integration_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IIntegration, IError>>;
export declare const update_integration: (sdk: IAPIMethods, integration_id: string, body: Partial<IWriteIntegration>, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IIntegration, IError | IValidationError>>;
export declare const fetch_integration_form: (sdk: IAPIMethods, integration_id: string, body?: Partial<IDictionary<string>> | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IDataActionForm, IError | IValidationError>>;
export declare const test_integration: (sdk: IAPIMethods, integration_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IIntegrationTestResult, IError | IValidationError>>;
export declare const jdbc_interface: (sdk: IAPIMethods, avatica_request?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IJdbcInterface, IError>>;
export declare const all_looks: (sdk: IAPIMethods, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ILook[], IError>>;
export declare const create_look: (sdk: IAPIMethods, body: Partial<IWriteLookWithQuery>, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ILookWithQuery, IError | IValidationError>>;
export declare const search_looks: (sdk: IAPIMethods, request: IRequestSearchLooks, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ILook[], IError>>;
export declare const look: (sdk: IAPIMethods, look_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ILookWithQuery, IError>>;
export declare const update_look: (sdk: IAPIMethods, look_id: string, body: Partial<IWriteLookWithQuery>, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ILookWithQuery, IError | IValidationError>>;
export declare const delete_look: (sdk: IAPIMethods, look_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError>>;
export declare const run_look: (sdk: IAPIMethods, request: IRequestRunLook, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError | IValidationError>>;
export declare const copy_look: (sdk: IAPIMethods, look_id: string, folder_id?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ILookWithQuery, IError | IValidationError>>;
export declare const move_look: (sdk: IAPIMethods, look_id: string, folder_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ILookWithQuery, IError | IValidationError>>;
export declare const all_lookml_models: (sdk: IAPIMethods, request: IRequestAllLookmlModels, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ILookmlModel[], IError>>;
export declare const create_lookml_model: (sdk: IAPIMethods, body: Partial<IWriteLookmlModel>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ILookmlModel, IError | IValidationError>>;
export declare const lookml_model: (sdk: IAPIMethods, lookml_model_name: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ILookmlModel, IError>>;
export declare const update_lookml_model: (sdk: IAPIMethods, lookml_model_name: string, body: Partial<IWriteLookmlModel>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ILookmlModel, IError | IValidationError>>;
export declare const delete_lookml_model: (sdk: IAPIMethods, lookml_model_name: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError>>;
export declare const lookml_model_explore: (sdk: IAPIMethods, lookml_model_name: string, explore_name: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ILookmlModelExplore, IError>>;
export declare const model_fieldname_suggestions: (sdk: IAPIMethods, request: IRequestModelFieldnameSuggestions, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IModelFieldSuggestions, IError>>;
export declare const get_model: (sdk: IAPIMethods, model_name: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IModel, IError>>;
export declare const connection_databases: (sdk: IAPIMethods, connection_name: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string[], IError>>;
export declare const connection_features: (sdk: IAPIMethods, connection_name: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IConnectionFeatures, IError | IValidationError>>;
export declare const connection_schemas: (sdk: IAPIMethods, request: IRequestConnectionSchemas, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ISchema[], IError | IValidationError>>;
export declare const connection_tables: (sdk: IAPIMethods, request: IRequestConnectionTables, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ISchemaTables[], IError | IValidationError>>;
export declare const connection_columns: (sdk: IAPIMethods, request: IRequestConnectionColumns, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ISchemaColumns[], IError | IValidationError>>;
export declare const connection_search_columns: (sdk: IAPIMethods, request: IRequestConnectionSearchColumns, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IColumnSearch[], IError | IValidationError>>;
export declare const connection_cost_estimate: (sdk: IAPIMethods, connection_name: string, body: Partial<ICreateCostEstimate>, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ICostEstimate, IError | IValidationError>>;
export declare const lock_all: (sdk: IAPIMethods, project_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError | IValidationError>>;
export declare const all_git_branches: (sdk: IAPIMethods, project_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IGitBranch[], IError>>;
export declare const git_branch: (sdk: IAPIMethods, project_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IGitBranch, IError>>;
export declare const update_git_branch: (sdk: IAPIMethods, project_id: string, body: Partial<IWriteGitBranch>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IGitBranch, IError | IValidationError>>;
export declare const create_git_branch: (sdk: IAPIMethods, project_id: string, body: Partial<IWriteGitBranch>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IGitBranch, IError | IValidationError>>;
export declare const find_git_branch: (sdk: IAPIMethods, project_id: string, branch_name: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IGitBranch, IError>>;
export declare const delete_git_branch: (sdk: IAPIMethods, project_id: string, branch_name: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError>>;
export declare const deploy_ref_to_production: (sdk: IAPIMethods, request: IRequestDeployRefToProduction, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError | IValidationError>>;
export declare const deploy_to_production: (sdk: IAPIMethods, project_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError | IValidationError>>;
export declare const reset_project_to_production: (sdk: IAPIMethods, project_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError | IValidationError>>;
export declare const reset_project_to_remote: (sdk: IAPIMethods, project_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError | IValidationError>>;
export declare const all_projects: (sdk: IAPIMethods, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IProject[], IError>>;
export declare const create_project: (sdk: IAPIMethods, body: Partial<IWriteProject>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IProject, IError | IValidationError>>;
export declare const project: (sdk: IAPIMethods, project_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IProject, IError>>;
export declare const update_project: (sdk: IAPIMethods, project_id: string, body: Partial<IWriteProject>, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IProject, IError | IValidationError>>;
export declare const manifest: (sdk: IAPIMethods, project_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IManifest, IError>>;
export declare const git_deploy_key: (sdk: IAPIMethods, project_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError>>;
export declare const create_git_deploy_key: (sdk: IAPIMethods, project_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError | IValidationError>>;
export declare const project_validation_results: (sdk: IAPIMethods, project_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IProjectValidationCache, IError>>;
export declare const validate_project: (sdk: IAPIMethods, project_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IProjectValidation, IError | IValidationError>>;
export declare const project_workspace: (sdk: IAPIMethods, project_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IProjectWorkspace, IError>>;
export declare const all_project_files: (sdk: IAPIMethods, project_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IProjectFile[], IError>>;
export declare const project_file: (sdk: IAPIMethods, project_id: string, file_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IProjectFile, IError>>;
export declare const all_git_connection_tests: (sdk: IAPIMethods, project_id: string, remote_url?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IGitConnectionTest[], IError>>;
export declare const run_git_connection_test: (sdk: IAPIMethods, request: IRequestRunGitConnectionTest, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IGitConnectionTestResult, IError | IValidationError>>;
export declare const all_lookml_tests: (sdk: IAPIMethods, project_id: string, file_id?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ILookmlTest[], IError>>;
export declare const run_lookml_test: (sdk: IAPIMethods, request: IRequestRunLookmlTest, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ILookmlTestResult[], IError | IValidationError>>;
export declare const tag_ref: (sdk: IAPIMethods, request: IRequestTagRef, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IProject, IError | IValidationError>>;
export declare const update_repository_credential: (sdk: IAPIMethods, root_project_id: string, credential_id: string, body: Partial<IWriteRepositoryCredential>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IRepositoryCredential, IError | IValidationError>>;
export declare const delete_repository_credential: (sdk: IAPIMethods, root_project_id: string, credential_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError>>;
export declare const get_all_repository_credentials: (sdk: IAPIMethods, root_project_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IRepositoryCredential[], IError>>;
export declare const create_query_task: (sdk: IAPIMethods, request: IRequestCreateQueryTask, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IQueryTask, IError | IValidationError>>;
export declare const query_task_multi_results: (sdk: IAPIMethods, query_task_ids: DelimArray<string>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IDictionary<any>, IError>>;
export declare const query_task: (sdk: IAPIMethods, query_task_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IQueryTask, IError>>;
export declare const query_task_results: (sdk: IAPIMethods, query_task_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError>>;
export declare const query: (sdk: IAPIMethods, query_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IQuery, IError>>;
export declare const query_for_slug: (sdk: IAPIMethods, slug: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IQuery, IError>>;
export declare const create_query: (sdk: IAPIMethods, body: Partial<IWriteQuery>, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IQuery, IError | IValidationError>>;
export declare const run_query: (sdk: IAPIMethods, request: IRequestRunQuery, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError | IValidationError>>;
export declare const run_inline_query: (sdk: IAPIMethods, request: IRequestRunInlineQuery, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError | IValidationError>>;
export declare const run_url_encoded_query: (sdk: IAPIMethods, model_name: string, view_name: string, result_format: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError | IValidationError>>;
export declare const merge_query: (sdk: IAPIMethods, merge_query_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IMergeQuery, IError>>;
export declare const create_merge_query: (sdk: IAPIMethods, body?: Partial<IWriteMergeQuery> | undefined, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IMergeQuery, IError | IValidationError>>;
export declare const all_running_queries: (sdk: IAPIMethods, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IRunningQueries[], IError>>;
export declare const kill_query: (sdk: IAPIMethods, query_task_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError | IValidationError>>;
export declare const run_sql_interface_query: (sdk: IAPIMethods, query_id: number, result_format: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError | IValidationError>>;
export declare const create_sql_interface_query: (sdk: IAPIMethods, body: Partial<IWriteSqlInterfaceQueryCreate>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ISqlInterfaceQuery, IError | IValidationError>>;
export declare const create_sql_query: (sdk: IAPIMethods, body: Partial<ISqlQueryCreate>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ISqlQuery, IError | IValidationError>>;
export declare const sql_query: (sdk: IAPIMethods, slug: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ISqlQuery, IError>>;
export declare const run_sql_query: (sdk: IAPIMethods, slug: string, result_format: string, download?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError | IValidationError>>;
export declare const create_look_render_task: (sdk: IAPIMethods, look_id: string, result_format: string, width: number, height: number, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IRenderTask, IError | IValidationError>>;
export declare const create_query_render_task: (sdk: IAPIMethods, query_id: string, result_format: string, width: number, height: number, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IRenderTask, IError | IValidationError>>;
export declare const create_dashboard_render_task: (sdk: IAPIMethods, request: IRequestCreateDashboardRenderTask, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IRenderTask, IError | IValidationError>>;
export declare const render_task: (sdk: IAPIMethods, render_task_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IRenderTask, IError>>;
export declare const render_task_results: (sdk: IAPIMethods, render_task_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError>>;
export declare const create_dashboard_element_render_task: (sdk: IAPIMethods, dashboard_element_id: string, result_format: string, width: number, height: number, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IRenderTask, IError | IValidationError>>;
export declare const search_model_sets: (sdk: IAPIMethods, request: IRequestSearchModelSets, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IModelSet[], IError>>;
export declare const model_set: (sdk: IAPIMethods, model_set_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IModelSet, IError>>;
export declare const update_model_set: (sdk: IAPIMethods, model_set_id: string, body: Partial<IWriteModelSet>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IModelSet, IError | IValidationError>>;
export declare const delete_model_set: (sdk: IAPIMethods, model_set_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError>>;
export declare const all_model_sets: (sdk: IAPIMethods, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IModelSet[], IError>>;
export declare const create_model_set: (sdk: IAPIMethods, body: Partial<IWriteModelSet>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IModelSet, IError | IValidationError>>;
export declare const all_permissions: (sdk: IAPIMethods, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IPermission[], IError>>;
export declare const search_permission_sets: (sdk: IAPIMethods, request: IRequestSearchPermissionSets, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IPermissionSet[], IError>>;
export declare const permission_set: (sdk: IAPIMethods, permission_set_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IPermissionSet, IError>>;
export declare const update_permission_set: (sdk: IAPIMethods, permission_set_id: string, body: Partial<IWritePermissionSet>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IPermissionSet, IError | IValidationError>>;
export declare const delete_permission_set: (sdk: IAPIMethods, permission_set_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError>>;
export declare const all_permission_sets: (sdk: IAPIMethods, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IPermissionSet[], IError>>;
export declare const create_permission_set: (sdk: IAPIMethods, body: Partial<IWritePermissionSet>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IPermissionSet, IError | IValidationError>>;
export declare const all_roles: (sdk: IAPIMethods, request: IRequestAllRoles, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IRole[], IError>>;
export declare const create_role: (sdk: IAPIMethods, body: Partial<IWriteRole>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IRole, IError | IValidationError>>;
export declare const search_roles: (sdk: IAPIMethods, request: IRequestSearchRoles, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IRole[], IError>>;
export declare const search_roles_with_user_count: (sdk: IAPIMethods, request: IRequestSearchRolesWithUserCount, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IRoleSearch[], IError>>;
export declare const role: (sdk: IAPIMethods, role_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IRole, IError>>;
export declare const update_role: (sdk: IAPIMethods, role_id: string, body: Partial<IWriteRole>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IRole, IError | IValidationError>>;
export declare const delete_role: (sdk: IAPIMethods, role_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError>>;
export declare const role_groups: (sdk: IAPIMethods, role_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IGroup[], IError>>;
export declare const set_role_groups: (sdk: IAPIMethods, role_id: string, body: Partial<string[]>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IGroup[], IError | IValidationError>>;
export declare const role_users: (sdk: IAPIMethods, request: IRequestRoleUsers, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IUser[], IError>>;
export declare const set_role_users: (sdk: IAPIMethods, role_id: string, body: Partial<string[]>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IUser[], IError | IValidationError>>;
export declare const scheduled_plans_for_space: (sdk: IAPIMethods, space_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IScheduledPlan[], IError>>;
export declare const scheduled_plan: (sdk: IAPIMethods, scheduled_plan_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IScheduledPlan, IError>>;
export declare const update_scheduled_plan: (sdk: IAPIMethods, scheduled_plan_id: string, body: Partial<IWriteScheduledPlan>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IScheduledPlan, IError | IValidationError>>;
export declare const delete_scheduled_plan: (sdk: IAPIMethods, scheduled_plan_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError>>;
export declare const all_scheduled_plans: (sdk: IAPIMethods, request: IRequestAllScheduledPlans, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IScheduledPlan[], IError | IValidationError>>;
export declare const create_scheduled_plan: (sdk: IAPIMethods, body: Partial<IWriteScheduledPlan>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IScheduledPlan, IError | IValidationError>>;
export declare const scheduled_plan_run_once: (sdk: IAPIMethods, body: Partial<IWriteScheduledPlan>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IScheduledPlan, IError | IValidationError>>;
export declare const scheduled_plans_for_look: (sdk: IAPIMethods, request: IRequestScheduledPlansForLook, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IScheduledPlan[], IError>>;
export declare const scheduled_plans_for_dashboard: (sdk: IAPIMethods, request: IRequestScheduledPlansForDashboard, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IScheduledPlan[], IError>>;
export declare const scheduled_plans_for_lookml_dashboard: (sdk: IAPIMethods, request: IRequestScheduledPlansForLookmlDashboard, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IScheduledPlan[], IError>>;
export declare const scheduled_plan_run_once_by_id: (sdk: IAPIMethods, scheduled_plan_id: string, body?: Partial<IWriteScheduledPlan> | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IScheduledPlan, IError | IValidationError>>;
export declare const session: (sdk: IAPIMethods, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IApiSession, IError>>;
export declare const update_session: (sdk: IAPIMethods, body: Partial<IWriteApiSession>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IApiSession, IError | IValidationError>>;
export declare const all_themes: (sdk: IAPIMethods, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ITheme[], IError>>;
export declare const create_theme: (sdk: IAPIMethods, body: Partial<IWriteTheme>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ITheme, IError | IValidationError>>;
export declare const search_themes: (sdk: IAPIMethods, request: IRequestSearchThemes, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ITheme[], IError>>;
export declare const default_theme: (sdk: IAPIMethods, ts?: Date | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ITheme, IError>>;
export declare const set_default_theme: (sdk: IAPIMethods, name: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ITheme, IError | IValidationError>>;
export declare const active_themes: (sdk: IAPIMethods, request: IRequestActiveThemes, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ITheme[], IError>>;
export declare const theme_or_default: (sdk: IAPIMethods, name: string, ts?: Date | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ITheme, IError>>;
export declare const validate_theme: (sdk: IAPIMethods, body: Partial<IWriteTheme>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IValidationError, IError | IValidationError>>;
export declare const theme: (sdk: IAPIMethods, theme_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ITheme, IError>>;
export declare const update_theme: (sdk: IAPIMethods, theme_id: string, body: Partial<IWriteTheme>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ITheme, IError | IValidationError>>;
export declare const delete_theme: (sdk: IAPIMethods, theme_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError>>;
export declare const search_credentials_email: (sdk: IAPIMethods, request: IRequestSearchCredentialsEmail, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ICredentialsEmailSearch[], IError>>;
export declare const me: (sdk: IAPIMethods, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IUser, IError>>;
export declare const all_users: (sdk: IAPIMethods, request: IRequestAllUsers, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IUser[], IError>>;
export declare const create_user: (sdk: IAPIMethods, body?: Partial<IWriteUser> | undefined, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IUser, IError | IValidationError>>;
export declare const search_users: (sdk: IAPIMethods, request: IRequestSearchUsers, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IUser[], IError>>;
export declare const search_users_names: (sdk: IAPIMethods, request: IRequestSearchUsersNames, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IUser[], IError>>;
export declare const user: (sdk: IAPIMethods, user_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IUser, IError>>;
export declare const update_user: (sdk: IAPIMethods, user_id: string, body: Partial<IWriteUser>, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IUser, IError | IValidationError>>;
export declare const delete_user: (sdk: IAPIMethods, user_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError>>;
export declare const user_for_credential: (sdk: IAPIMethods, credential_type: string, credential_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IUser, IError>>;
export declare const user_credentials_email: (sdk: IAPIMethods, user_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ICredentialsEmail, IError>>;
export declare const create_user_credentials_email: (sdk: IAPIMethods, user_id: string, body: Partial<IWriteCredentialsEmail>, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ICredentialsEmail, IError | IValidationError>>;
export declare const update_user_credentials_email: (sdk: IAPIMethods, user_id: string, body: Partial<IWriteCredentialsEmail>, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ICredentialsEmail, IError | IValidationError>>;
export declare const delete_user_credentials_email: (sdk: IAPIMethods, user_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError>>;
export declare const user_credentials_totp: (sdk: IAPIMethods, user_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ICredentialsTotp, IError>>;
export declare const create_user_credentials_totp: (sdk: IAPIMethods, user_id: string, body?: Partial<ICredentialsTotp> | undefined, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ICredentialsTotp, IError | IValidationError>>;
export declare const delete_user_credentials_totp: (sdk: IAPIMethods, user_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError>>;
export declare const user_credentials_ldap: (sdk: IAPIMethods, user_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ICredentialsLDAP, IError>>;
export declare const delete_user_credentials_ldap: (sdk: IAPIMethods, user_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError>>;
export declare const user_credentials_google: (sdk: IAPIMethods, user_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ICredentialsGoogle, IError>>;
export declare const delete_user_credentials_google: (sdk: IAPIMethods, user_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError>>;
export declare const user_credentials_saml: (sdk: IAPIMethods, user_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ICredentialsSaml, IError>>;
export declare const delete_user_credentials_saml: (sdk: IAPIMethods, user_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError>>;
export declare const user_credentials_oidc: (sdk: IAPIMethods, user_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ICredentialsOIDC, IError>>;
export declare const delete_user_credentials_oidc: (sdk: IAPIMethods, user_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError>>;
export declare const user_credentials_api3: (sdk: IAPIMethods, user_id: string, credentials_api3_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ICredentialsApi3, IError>>;
export declare const delete_user_credentials_api3: (sdk: IAPIMethods, user_id: string, credentials_api3_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError>>;
export declare const all_user_credentials_api3s: (sdk: IAPIMethods, user_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ICredentialsApi3[], IError>>;
export declare const create_user_credentials_api3: (sdk: IAPIMethods, user_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ICreateCredentialsApi3, IError | IValidationError>>;
export declare const user_credentials_embed: (sdk: IAPIMethods, user_id: string, credentials_embed_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ICredentialsEmbed, IError>>;
export declare const delete_user_credentials_embed: (sdk: IAPIMethods, user_id: string, credentials_embed_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError>>;
export declare const all_user_credentials_embeds: (sdk: IAPIMethods, user_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ICredentialsEmbed[], IError>>;
export declare const user_credentials_looker_openid: (sdk: IAPIMethods, user_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ICredentialsLookerOpenid, IError>>;
export declare const delete_user_credentials_looker_openid: (sdk: IAPIMethods, user_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError>>;
export declare const user_session: (sdk: IAPIMethods, user_id: string, session_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ISession, IError>>;
export declare const delete_user_session: (sdk: IAPIMethods, user_id: string, session_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError>>;
export declare const all_user_sessions: (sdk: IAPIMethods, user_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ISession[], IError>>;
export declare const create_user_credentials_email_password_reset: (sdk: IAPIMethods, request: IRequestCreateUserCredentialsEmailPasswordReset, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ICredentialsEmail, IError>>;
export declare const user_roles: (sdk: IAPIMethods, request: IRequestUserRoles, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IRole[], IError>>;
export declare const set_user_roles: (sdk: IAPIMethods, user_id: string, body: Partial<string[]>, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IRole[], IError>>;
export declare const user_attribute_user_values: (sdk: IAPIMethods, request: IRequestUserAttributeUserValues, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IUserAttributeWithValue[], IError>>;
export declare const set_user_attribute_user_value: (sdk: IAPIMethods, user_id: string, user_attribute_id: string, body: Partial<IWriteUserAttributeWithValue>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IUserAttributeWithValue, IError | IValidationError>>;
export declare const delete_user_attribute_user_value: (sdk: IAPIMethods, user_id: string, user_attribute_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<void, IError>>;
export declare const send_user_credentials_email_password_reset: (sdk: IAPIMethods, user_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<ICredentialsEmail, IError>>;
export declare const wipeout_user_emails: (sdk: IAPIMethods, user_id: string, body: Partial<IUserEmailOnly>, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IUser, IError | IValidationError>>;
export declare const create_embed_user: (sdk: IAPIMethods, body: Partial<ICreateEmbedUserRequest>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IUserPublic, IError>>;
export declare const all_user_attributes: (sdk: IAPIMethods, request: IRequestAllUserAttributes, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IUserAttribute[], IError>>;
export declare const create_user_attribute: (sdk: IAPIMethods, body: Partial<IWriteUserAttribute>, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IUserAttribute, IError | IValidationError>>;
export declare const user_attribute: (sdk: IAPIMethods, user_attribute_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IUserAttribute, IError>>;
export declare const update_user_attribute: (sdk: IAPIMethods, user_attribute_id: string, body: Partial<IWriteUserAttribute>, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IUserAttribute, IError | IValidationError>>;
export declare const delete_user_attribute: (sdk: IAPIMethods, user_attribute_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<string, IError>>;
export declare const all_user_attribute_group_values: (sdk: IAPIMethods, user_attribute_id: string, fields?: string | undefined, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IUserAttributeGroupValue[], IError>>;
export declare const set_user_attribute_group_values: (sdk: IAPIMethods, user_attribute_id: string, body: Partial<IUserAttributeGroupValue[]>, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IUserAttributeGroupValue[], IError | IValidationError>>;
export declare const all_workspaces: (sdk: IAPIMethods, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IWorkspace[], IError>>;
export declare const workspace: (sdk: IAPIMethods, workspace_id: string, options?: Partial<ITransportSettings> | undefined) => Promise<SDKResponse<IWorkspace, IError>>;
